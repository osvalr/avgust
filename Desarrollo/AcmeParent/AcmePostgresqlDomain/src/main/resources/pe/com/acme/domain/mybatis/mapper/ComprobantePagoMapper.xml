<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pe.com.acme.domain.mybatis.mapper.ComprobantePagoMapper">
  <resultMap id="BaseResultMap" type="pe.com.acme.domain.mybatis.model.ComprobantePago">
    <id column="id_comprobante_pago" jdbcType="INTEGER" property="id_comprobante_pago" />
    <result column="id_tipo_comprobante_pago" jdbcType="INTEGER" property="id_tipo_comprobante_pago" />
    <result column="fecha_emision" jdbcType="DATE" property="fecha_emision" />
    <result column="fecha_cancelado" jdbcType="DATE" property="fecha_cancelado" />
    <result column="serie_docu_comprobante" jdbcType="VARCHAR" property="serie_docu_comprobante" />
    <result column="correlativo_docu_cdp" jdbcType="VARCHAR" property="correlativo_docu_cdp" />
    <result column="num_docu_comprobante" jdbcType="VARCHAR" property="num_docu_comprobante" />
    <result column="id_cliente" jdbcType="INTEGER" property="id_cliente" />
    <result column="sub_total_venta" jdbcType="NUMERIC" property="sub_total_venta" />
    <result column="valor_igv_venta" jdbcType="NUMERIC" property="valor_igv_venta" />
    <result column="importe_total" jdbcType="NUMERIC" property="importe_total" />
    <result column="flag_percepcion" jdbcType="INTEGER" property="flag_percepcion" />
    <result column="porcentaje_percepcion" jdbcType="NUMERIC" property="porcentaje_percepcion" />
    <result column="monto_percepcion" jdbcType="NUMERIC" property="monto_percepcion" />
    <result column="id_estado" jdbcType="INTEGER" property="id_estado" />
    <result column="id_usuario_reg" jdbcType="INTEGER" property="id_usuario_reg" />
    <result column="fecha_registro" jdbcType="TIMESTAMP" property="fecha_registro" />
    <result column="id_usuario_mod" jdbcType="INTEGER" property="id_usuario_mod" />
    <result column="fecha_modificacion" jdbcType="TIMESTAMP" property="fecha_modificacion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id_comprobante_pago, id_tipo_comprobante_pago, fecha_emision, fecha_cancelado, serie_docu_comprobante, 
    correlativo_docu_cdp, num_docu_comprobante, id_cliente, sub_total_venta, valor_igv_venta, 
    importe_total, flag_percepcion, porcentaje_percepcion, monto_percepcion, id_estado, 
    id_usuario_reg, fecha_registro, id_usuario_mod, fecha_modificacion
  </sql>
  <select id="selectByExample" parameterType="pe.com.acme.domain.mybatis.model.ComprobantePagoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from facturacion.comprobante_pago
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="pe.com.acme.domain.mybatis.model.ComprobantePagoKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from facturacion.comprobante_pago
    where id_comprobante_pago = #{id_comprobante_pago,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="pe.com.acme.domain.mybatis.model.ComprobantePagoKey">
    delete from facturacion.comprobante_pago
    where id_comprobante_pago = #{id_comprobante_pago,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pe.com.acme.domain.mybatis.model.ComprobantePagoExample">
    delete from facturacion.comprobante_pago
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id_comprobante_pago" keyProperty="id_comprobante_pago" parameterType="pe.com.acme.domain.mybatis.model.ComprobantePago" useGeneratedKeys="true">
    insert into facturacion.comprobante_pago (id_tipo_comprobante_pago, fecha_emision, 
      fecha_cancelado, serie_docu_comprobante, correlativo_docu_cdp, 
      num_docu_comprobante, id_cliente, sub_total_venta, 
      valor_igv_venta, importe_total, flag_percepcion, 
      porcentaje_percepcion, monto_percepcion, 
      id_estado, id_usuario_reg, fecha_registro, 
      id_usuario_mod, fecha_modificacion)
    values (#{id_tipo_comprobante_pago,jdbcType=INTEGER}, #{fecha_emision,jdbcType=DATE}, 
      #{fecha_cancelado,jdbcType=DATE}, #{serie_docu_comprobante,jdbcType=VARCHAR}, #{correlativo_docu_cdp,jdbcType=VARCHAR}, 
      #{num_docu_comprobante,jdbcType=VARCHAR}, #{id_cliente,jdbcType=INTEGER}, #{sub_total_venta,jdbcType=NUMERIC}, 
      #{valor_igv_venta,jdbcType=NUMERIC}, #{importe_total,jdbcType=NUMERIC}, #{flag_percepcion,jdbcType=INTEGER}, 
      #{porcentaje_percepcion,jdbcType=NUMERIC}, #{monto_percepcion,jdbcType=NUMERIC}, 
      #{id_estado,jdbcType=INTEGER}, #{id_usuario_reg,jdbcType=INTEGER}, #{fecha_registro,jdbcType=TIMESTAMP}, 
      #{id_usuario_mod,jdbcType=INTEGER}, #{fecha_modificacion,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id_comprobante_pago" keyProperty="id_comprobante_pago" parameterType="pe.com.acme.domain.mybatis.model.ComprobantePago" useGeneratedKeys="true">
    insert into facturacion.comprobante_pago
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id_tipo_comprobante_pago != null">
        id_tipo_comprobante_pago,
      </if>
      <if test="fecha_emision != null">
        fecha_emision,
      </if>
      <if test="fecha_cancelado != null">
        fecha_cancelado,
      </if>
      <if test="serie_docu_comprobante != null">
        serie_docu_comprobante,
      </if>
      <if test="correlativo_docu_cdp != null">
        correlativo_docu_cdp,
      </if>
      <if test="num_docu_comprobante != null">
        num_docu_comprobante,
      </if>
      <if test="id_cliente != null">
        id_cliente,
      </if>
      <if test="sub_total_venta != null">
        sub_total_venta,
      </if>
      <if test="valor_igv_venta != null">
        valor_igv_venta,
      </if>
      <if test="importe_total != null">
        importe_total,
      </if>
      <if test="flag_percepcion != null">
        flag_percepcion,
      </if>
      <if test="porcentaje_percepcion != null">
        porcentaje_percepcion,
      </if>
      <if test="monto_percepcion != null">
        monto_percepcion,
      </if>
      <if test="id_estado != null">
        id_estado,
      </if>
      <if test="id_usuario_reg != null">
        id_usuario_reg,
      </if>
      <if test="fecha_registro != null">
        fecha_registro,
      </if>
      <if test="id_usuario_mod != null">
        id_usuario_mod,
      </if>
      <if test="fecha_modificacion != null">
        fecha_modificacion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id_tipo_comprobante_pago != null">
        #{id_tipo_comprobante_pago,jdbcType=INTEGER},
      </if>
      <if test="fecha_emision != null">
        #{fecha_emision,jdbcType=DATE},
      </if>
      <if test="fecha_cancelado != null">
        #{fecha_cancelado,jdbcType=DATE},
      </if>
      <if test="serie_docu_comprobante != null">
        #{serie_docu_comprobante,jdbcType=VARCHAR},
      </if>
      <if test="correlativo_docu_cdp != null">
        #{correlativo_docu_cdp,jdbcType=VARCHAR},
      </if>
      <if test="num_docu_comprobante != null">
        #{num_docu_comprobante,jdbcType=VARCHAR},
      </if>
      <if test="id_cliente != null">
        #{id_cliente,jdbcType=INTEGER},
      </if>
      <if test="sub_total_venta != null">
        #{sub_total_venta,jdbcType=NUMERIC},
      </if>
      <if test="valor_igv_venta != null">
        #{valor_igv_venta,jdbcType=NUMERIC},
      </if>
      <if test="importe_total != null">
        #{importe_total,jdbcType=NUMERIC},
      </if>
      <if test="flag_percepcion != null">
        #{flag_percepcion,jdbcType=INTEGER},
      </if>
      <if test="porcentaje_percepcion != null">
        #{porcentaje_percepcion,jdbcType=NUMERIC},
      </if>
      <if test="monto_percepcion != null">
        #{monto_percepcion,jdbcType=NUMERIC},
      </if>
      <if test="id_estado != null">
        #{id_estado,jdbcType=INTEGER},
      </if>
      <if test="id_usuario_reg != null">
        #{id_usuario_reg,jdbcType=INTEGER},
      </if>
      <if test="fecha_registro != null">
        #{fecha_registro,jdbcType=TIMESTAMP},
      </if>
      <if test="id_usuario_mod != null">
        #{id_usuario_mod,jdbcType=INTEGER},
      </if>
      <if test="fecha_modificacion != null">
        #{fecha_modificacion,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pe.com.acme.domain.mybatis.model.ComprobantePagoExample" resultType="java.lang.Long">
    select count(*) from facturacion.comprobante_pago
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update facturacion.comprobante_pago
    <set>
      <if test="record.id_comprobante_pago != null">
        id_comprobante_pago = #{record.id_comprobante_pago,jdbcType=INTEGER},
      </if>
      <if test="record.id_tipo_comprobante_pago != null">
        id_tipo_comprobante_pago = #{record.id_tipo_comprobante_pago,jdbcType=INTEGER},
      </if>
      <if test="record.fecha_emision != null">
        fecha_emision = #{record.fecha_emision,jdbcType=DATE},
      </if>
      <if test="record.fecha_cancelado != null">
        fecha_cancelado = #{record.fecha_cancelado,jdbcType=DATE},
      </if>
      <if test="record.serie_docu_comprobante != null">
        serie_docu_comprobante = #{record.serie_docu_comprobante,jdbcType=VARCHAR},
      </if>
      <if test="record.correlativo_docu_cdp != null">
        correlativo_docu_cdp = #{record.correlativo_docu_cdp,jdbcType=VARCHAR},
      </if>
      <if test="record.num_docu_comprobante != null">
        num_docu_comprobante = #{record.num_docu_comprobante,jdbcType=VARCHAR},
      </if>
      <if test="record.id_cliente != null">
        id_cliente = #{record.id_cliente,jdbcType=INTEGER},
      </if>
      <if test="record.sub_total_venta != null">
        sub_total_venta = #{record.sub_total_venta,jdbcType=NUMERIC},
      </if>
      <if test="record.valor_igv_venta != null">
        valor_igv_venta = #{record.valor_igv_venta,jdbcType=NUMERIC},
      </if>
      <if test="record.importe_total != null">
        importe_total = #{record.importe_total,jdbcType=NUMERIC},
      </if>
      <if test="record.flag_percepcion != null">
        flag_percepcion = #{record.flag_percepcion,jdbcType=INTEGER},
      </if>
      <if test="record.porcentaje_percepcion != null">
        porcentaje_percepcion = #{record.porcentaje_percepcion,jdbcType=NUMERIC},
      </if>
      <if test="record.monto_percepcion != null">
        monto_percepcion = #{record.monto_percepcion,jdbcType=NUMERIC},
      </if>
      <if test="record.id_estado != null">
        id_estado = #{record.id_estado,jdbcType=INTEGER},
      </if>
      <if test="record.id_usuario_reg != null">
        id_usuario_reg = #{record.id_usuario_reg,jdbcType=INTEGER},
      </if>
      <if test="record.fecha_registro != null">
        fecha_registro = #{record.fecha_registro,jdbcType=TIMESTAMP},
      </if>
      <if test="record.id_usuario_mod != null">
        id_usuario_mod = #{record.id_usuario_mod,jdbcType=INTEGER},
      </if>
      <if test="record.fecha_modificacion != null">
        fecha_modificacion = #{record.fecha_modificacion,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update facturacion.comprobante_pago
    set id_comprobante_pago = #{record.id_comprobante_pago,jdbcType=INTEGER},
      id_tipo_comprobante_pago = #{record.id_tipo_comprobante_pago,jdbcType=INTEGER},
      fecha_emision = #{record.fecha_emision,jdbcType=DATE},
      fecha_cancelado = #{record.fecha_cancelado,jdbcType=DATE},
      serie_docu_comprobante = #{record.serie_docu_comprobante,jdbcType=VARCHAR},
      correlativo_docu_cdp = #{record.correlativo_docu_cdp,jdbcType=VARCHAR},
      num_docu_comprobante = #{record.num_docu_comprobante,jdbcType=VARCHAR},
      id_cliente = #{record.id_cliente,jdbcType=INTEGER},
      sub_total_venta = #{record.sub_total_venta,jdbcType=NUMERIC},
      valor_igv_venta = #{record.valor_igv_venta,jdbcType=NUMERIC},
      importe_total = #{record.importe_total,jdbcType=NUMERIC},
      flag_percepcion = #{record.flag_percepcion,jdbcType=INTEGER},
      porcentaje_percepcion = #{record.porcentaje_percepcion,jdbcType=NUMERIC},
      monto_percepcion = #{record.monto_percepcion,jdbcType=NUMERIC},
      id_estado = #{record.id_estado,jdbcType=INTEGER},
      id_usuario_reg = #{record.id_usuario_reg,jdbcType=INTEGER},
      fecha_registro = #{record.fecha_registro,jdbcType=TIMESTAMP},
      id_usuario_mod = #{record.id_usuario_mod,jdbcType=INTEGER},
      fecha_modificacion = #{record.fecha_modificacion,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pe.com.acme.domain.mybatis.model.ComprobantePago">
    update facturacion.comprobante_pago
    <set>
      <if test="id_tipo_comprobante_pago != null">
        id_tipo_comprobante_pago = #{id_tipo_comprobante_pago,jdbcType=INTEGER},
      </if>
      <if test="fecha_emision != null">
        fecha_emision = #{fecha_emision,jdbcType=DATE},
      </if>
      <if test="fecha_cancelado != null">
        fecha_cancelado = #{fecha_cancelado,jdbcType=DATE},
      </if>
      <if test="serie_docu_comprobante != null">
        serie_docu_comprobante = #{serie_docu_comprobante,jdbcType=VARCHAR},
      </if>
      <if test="correlativo_docu_cdp != null">
        correlativo_docu_cdp = #{correlativo_docu_cdp,jdbcType=VARCHAR},
      </if>
      <if test="num_docu_comprobante != null">
        num_docu_comprobante = #{num_docu_comprobante,jdbcType=VARCHAR},
      </if>
      <if test="id_cliente != null">
        id_cliente = #{id_cliente,jdbcType=INTEGER},
      </if>
      <if test="sub_total_venta != null">
        sub_total_venta = #{sub_total_venta,jdbcType=NUMERIC},
      </if>
      <if test="valor_igv_venta != null">
        valor_igv_venta = #{valor_igv_venta,jdbcType=NUMERIC},
      </if>
      <if test="importe_total != null">
        importe_total = #{importe_total,jdbcType=NUMERIC},
      </if>
      <if test="flag_percepcion != null">
        flag_percepcion = #{flag_percepcion,jdbcType=INTEGER},
      </if>
      <if test="porcentaje_percepcion != null">
        porcentaje_percepcion = #{porcentaje_percepcion,jdbcType=NUMERIC},
      </if>
      <if test="monto_percepcion != null">
        monto_percepcion = #{monto_percepcion,jdbcType=NUMERIC},
      </if>
      <if test="id_estado != null">
        id_estado = #{id_estado,jdbcType=INTEGER},
      </if>
      <if test="id_usuario_reg != null">
        id_usuario_reg = #{id_usuario_reg,jdbcType=INTEGER},
      </if>
      <if test="fecha_registro != null">
        fecha_registro = #{fecha_registro,jdbcType=TIMESTAMP},
      </if>
      <if test="id_usuario_mod != null">
        id_usuario_mod = #{id_usuario_mod,jdbcType=INTEGER},
      </if>
      <if test="fecha_modificacion != null">
        fecha_modificacion = #{fecha_modificacion,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id_comprobante_pago = #{id_comprobante_pago,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pe.com.acme.domain.mybatis.model.ComprobantePago">
    update facturacion.comprobante_pago
    set id_tipo_comprobante_pago = #{id_tipo_comprobante_pago,jdbcType=INTEGER},
      fecha_emision = #{fecha_emision,jdbcType=DATE},
      fecha_cancelado = #{fecha_cancelado,jdbcType=DATE},
      serie_docu_comprobante = #{serie_docu_comprobante,jdbcType=VARCHAR},
      correlativo_docu_cdp = #{correlativo_docu_cdp,jdbcType=VARCHAR},
      num_docu_comprobante = #{num_docu_comprobante,jdbcType=VARCHAR},
      id_cliente = #{id_cliente,jdbcType=INTEGER},
      sub_total_venta = #{sub_total_venta,jdbcType=NUMERIC},
      valor_igv_venta = #{valor_igv_venta,jdbcType=NUMERIC},
      importe_total = #{importe_total,jdbcType=NUMERIC},
      flag_percepcion = #{flag_percepcion,jdbcType=INTEGER},
      porcentaje_percepcion = #{porcentaje_percepcion,jdbcType=NUMERIC},
      monto_percepcion = #{monto_percepcion,jdbcType=NUMERIC},
      id_estado = #{id_estado,jdbcType=INTEGER},
      id_usuario_reg = #{id_usuario_reg,jdbcType=INTEGER},
      fecha_registro = #{fecha_registro,jdbcType=TIMESTAMP},
      id_usuario_mod = #{id_usuario_mod,jdbcType=INTEGER},
      fecha_modificacion = #{fecha_modificacion,jdbcType=TIMESTAMP}
    where id_comprobante_pago = #{id_comprobante_pago,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="pe.com.acme.domain.mybatis.model.ComprobantePagoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from facturacion.comprobante_pago
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>