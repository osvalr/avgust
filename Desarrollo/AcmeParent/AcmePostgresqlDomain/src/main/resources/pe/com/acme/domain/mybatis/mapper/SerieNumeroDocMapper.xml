<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pe.com.acme.domain.mybatis.mapper.SerieNumeroDocMapper">
  <resultMap id="BaseResultMap" type="pe.com.acme.domain.mybatis.model.SerieNumeroDoc">
    <id column="id_serie_numero_doc" jdbcType="INTEGER" property="id_serie_numero_doc" />
    <result column="serie" jdbcType="VARCHAR" property="serie" />
    <result column="numero_doc" jdbcType="INTEGER" property="numero_doc" />
    <result column="id_tipo_documento" jdbcType="INTEGER" property="id_tipo_documento" />
    <result column="longitud" jdbcType="INTEGER" property="longitud" />
    <result column="id_estado" jdbcType="INTEGER" property="id_estado" />
    <result column="id_usuario_reg" jdbcType="INTEGER" property="id_usuario_reg" />
    <result column="fecha_registro" jdbcType="TIMESTAMP" property="fecha_registro" />
    <result column="id_usuario_mod" jdbcType="INTEGER" property="id_usuario_mod" />
    <result column="fecha_modificacion" jdbcType="TIMESTAMP" property="fecha_modificacion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id_serie_numero_doc, serie, numero_doc, id_tipo_documento, longitud, id_estado, id_usuario_reg, 
    fecha_registro, id_usuario_mod, fecha_modificacion
  </sql>
  <select id="selectByExample" parameterType="pe.com.acme.domain.mybatis.model.SerieNumeroDocExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from general.serie_numero_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="pe.com.acme.domain.mybatis.model.SerieNumeroDocKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from general.serie_numero_doc
    where id_serie_numero_doc = #{id_serie_numero_doc,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="pe.com.acme.domain.mybatis.model.SerieNumeroDocKey">
    delete from general.serie_numero_doc
    where id_serie_numero_doc = #{id_serie_numero_doc,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pe.com.acme.domain.mybatis.model.SerieNumeroDocExample">
    delete from general.serie_numero_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id_serie_numero_doc" keyProperty="id_serie_numero_doc" parameterType="pe.com.acme.domain.mybatis.model.SerieNumeroDoc" useGeneratedKeys="true">
    insert into general.serie_numero_doc (serie, numero_doc, id_tipo_documento, 
      longitud, id_estado, id_usuario_reg, 
      fecha_registro, id_usuario_mod, fecha_modificacion
      )
    values (#{serie,jdbcType=VARCHAR}, #{numero_doc,jdbcType=INTEGER}, #{id_tipo_documento,jdbcType=INTEGER}, 
      #{longitud,jdbcType=INTEGER}, #{id_estado,jdbcType=INTEGER}, #{id_usuario_reg,jdbcType=INTEGER}, 
      #{fecha_registro,jdbcType=TIMESTAMP}, #{id_usuario_mod,jdbcType=INTEGER}, #{fecha_modificacion,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id_serie_numero_doc" keyProperty="id_serie_numero_doc" parameterType="pe.com.acme.domain.mybatis.model.SerieNumeroDoc" useGeneratedKeys="true">
    insert into general.serie_numero_doc
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serie != null">
        serie,
      </if>
      <if test="numero_doc != null">
        numero_doc,
      </if>
      <if test="id_tipo_documento != null">
        id_tipo_documento,
      </if>
      <if test="longitud != null">
        longitud,
      </if>
      <if test="id_estado != null">
        id_estado,
      </if>
      <if test="id_usuario_reg != null">
        id_usuario_reg,
      </if>
      <if test="fecha_registro != null">
        fecha_registro,
      </if>
      <if test="id_usuario_mod != null">
        id_usuario_mod,
      </if>
      <if test="fecha_modificacion != null">
        fecha_modificacion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serie != null">
        #{serie,jdbcType=VARCHAR},
      </if>
      <if test="numero_doc != null">
        #{numero_doc,jdbcType=INTEGER},
      </if>
      <if test="id_tipo_documento != null">
        #{id_tipo_documento,jdbcType=INTEGER},
      </if>
      <if test="longitud != null">
        #{longitud,jdbcType=INTEGER},
      </if>
      <if test="id_estado != null">
        #{id_estado,jdbcType=INTEGER},
      </if>
      <if test="id_usuario_reg != null">
        #{id_usuario_reg,jdbcType=INTEGER},
      </if>
      <if test="fecha_registro != null">
        #{fecha_registro,jdbcType=TIMESTAMP},
      </if>
      <if test="id_usuario_mod != null">
        #{id_usuario_mod,jdbcType=INTEGER},
      </if>
      <if test="fecha_modificacion != null">
        #{fecha_modificacion,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pe.com.acme.domain.mybatis.model.SerieNumeroDocExample" resultType="java.lang.Long">
    select count(*) from general.serie_numero_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update general.serie_numero_doc
    <set>
      <if test="record.id_serie_numero_doc != null">
        id_serie_numero_doc = #{record.id_serie_numero_doc,jdbcType=INTEGER},
      </if>
      <if test="record.serie != null">
        serie = #{record.serie,jdbcType=VARCHAR},
      </if>
      <if test="record.numero_doc != null">
        numero_doc = #{record.numero_doc,jdbcType=INTEGER},
      </if>
      <if test="record.id_tipo_documento != null">
        id_tipo_documento = #{record.id_tipo_documento,jdbcType=INTEGER},
      </if>
      <if test="record.longitud != null">
        longitud = #{record.longitud,jdbcType=INTEGER},
      </if>
      <if test="record.id_estado != null">
        id_estado = #{record.id_estado,jdbcType=INTEGER},
      </if>
      <if test="record.id_usuario_reg != null">
        id_usuario_reg = #{record.id_usuario_reg,jdbcType=INTEGER},
      </if>
      <if test="record.fecha_registro != null">
        fecha_registro = #{record.fecha_registro,jdbcType=TIMESTAMP},
      </if>
      <if test="record.id_usuario_mod != null">
        id_usuario_mod = #{record.id_usuario_mod,jdbcType=INTEGER},
      </if>
      <if test="record.fecha_modificacion != null">
        fecha_modificacion = #{record.fecha_modificacion,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update general.serie_numero_doc
    set id_serie_numero_doc = #{record.id_serie_numero_doc,jdbcType=INTEGER},
      serie = #{record.serie,jdbcType=VARCHAR},
      numero_doc = #{record.numero_doc,jdbcType=INTEGER},
      id_tipo_documento = #{record.id_tipo_documento,jdbcType=INTEGER},
      longitud = #{record.longitud,jdbcType=INTEGER},
      id_estado = #{record.id_estado,jdbcType=INTEGER},
      id_usuario_reg = #{record.id_usuario_reg,jdbcType=INTEGER},
      fecha_registro = #{record.fecha_registro,jdbcType=TIMESTAMP},
      id_usuario_mod = #{record.id_usuario_mod,jdbcType=INTEGER},
      fecha_modificacion = #{record.fecha_modificacion,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pe.com.acme.domain.mybatis.model.SerieNumeroDoc">
    update general.serie_numero_doc
    <set>
      <if test="serie != null">
        serie = #{serie,jdbcType=VARCHAR},
      </if>
      <if test="numero_doc != null">
        numero_doc = #{numero_doc,jdbcType=INTEGER},
      </if>
      <if test="id_tipo_documento != null">
        id_tipo_documento = #{id_tipo_documento,jdbcType=INTEGER},
      </if>
      <if test="longitud != null">
        longitud = #{longitud,jdbcType=INTEGER},
      </if>
      <if test="id_estado != null">
        id_estado = #{id_estado,jdbcType=INTEGER},
      </if>
      <if test="id_usuario_reg != null">
        id_usuario_reg = #{id_usuario_reg,jdbcType=INTEGER},
      </if>
      <if test="fecha_registro != null">
        fecha_registro = #{fecha_registro,jdbcType=TIMESTAMP},
      </if>
      <if test="id_usuario_mod != null">
        id_usuario_mod = #{id_usuario_mod,jdbcType=INTEGER},
      </if>
      <if test="fecha_modificacion != null">
        fecha_modificacion = #{fecha_modificacion,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id_serie_numero_doc = #{id_serie_numero_doc,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pe.com.acme.domain.mybatis.model.SerieNumeroDoc">
    update general.serie_numero_doc
    set serie = #{serie,jdbcType=VARCHAR},
      numero_doc = #{numero_doc,jdbcType=INTEGER},
      id_tipo_documento = #{id_tipo_documento,jdbcType=INTEGER},
      longitud = #{longitud,jdbcType=INTEGER},
      id_estado = #{id_estado,jdbcType=INTEGER},
      id_usuario_reg = #{id_usuario_reg,jdbcType=INTEGER},
      fecha_registro = #{fecha_registro,jdbcType=TIMESTAMP},
      id_usuario_mod = #{id_usuario_mod,jdbcType=INTEGER},
      fecha_modificacion = #{fecha_modificacion,jdbcType=TIMESTAMP}
    where id_serie_numero_doc = #{id_serie_numero_doc,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="pe.com.acme.domain.mybatis.model.SerieNumeroDocExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from general.serie_numero_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>