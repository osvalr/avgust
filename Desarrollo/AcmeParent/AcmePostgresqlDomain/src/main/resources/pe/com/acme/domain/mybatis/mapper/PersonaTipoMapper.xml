<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pe.com.acme.domain.mybatis.mapper.PersonaTipoMapper" >
  <resultMap id="BaseResultMap" type="pe.com.acme.domain.mybatis.model.PersonaTipo" >
    <id column="id_persona" property="id_persona" jdbcType="INTEGER" />
    <id column="id_tipo_persona" property="id_tipo_persona" jdbcType="INTEGER" />
    <id column="id_sub_tipo_persona" property="id_sub_tipo_persona" jdbcType="INTEGER" />
    <result column="id_estado" property="id_estado" jdbcType="INTEGER" />
    <result column="id_usuario_reg" property="id_usuario_reg" jdbcType="INTEGER" />
    <result column="fecha_registro" property="fecha_registro" jdbcType="TIMESTAMP" />
    <result column="id_usuario_mod" property="id_usuario_mod" jdbcType="INTEGER" />
    <result column="fecha_modificacion" property="fecha_modificacion" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id_persona, id_tipo_persona, id_sub_tipo_persona, id_estado, id_usuario_reg, fecha_registro, 
    id_usuario_mod, fecha_modificacion
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pe.com.acme.domain.mybatis.model.PersonaTipoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from general.persona_tipo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="pe.com.acme.domain.mybatis.model.PersonaTipoKey" >
    select 
    <include refid="Base_Column_List" />
    from general.persona_tipo
    where id_persona = #{id_persona,jdbcType=INTEGER}
      and id_tipo_persona = #{id_tipo_persona,jdbcType=INTEGER}
      and id_sub_tipo_persona = #{id_sub_tipo_persona,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="pe.com.acme.domain.mybatis.model.PersonaTipoKey" >
    delete from general.persona_tipo
    where id_persona = #{id_persona,jdbcType=INTEGER}
      and id_tipo_persona = #{id_tipo_persona,jdbcType=INTEGER}
      and id_sub_tipo_persona = #{id_sub_tipo_persona,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pe.com.acme.domain.mybatis.model.PersonaTipoExample" >
    delete from general.persona_tipo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pe.com.acme.domain.mybatis.model.PersonaTipo" >
    insert into general.persona_tipo (id_persona, id_tipo_persona, id_sub_tipo_persona, 
      id_estado, id_usuario_reg, fecha_registro, 
      id_usuario_mod, fecha_modificacion)
    values (#{id_persona,jdbcType=INTEGER}, #{id_tipo_persona,jdbcType=INTEGER}, #{id_sub_tipo_persona,jdbcType=INTEGER}, 
      #{id_estado,jdbcType=INTEGER}, #{id_usuario_reg,jdbcType=INTEGER}, #{fecha_registro,jdbcType=TIMESTAMP}, 
      #{id_usuario_mod,jdbcType=INTEGER}, #{fecha_modificacion,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="pe.com.acme.domain.mybatis.model.PersonaTipo" >
    insert into general.persona_tipo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id_persona != null" >
        id_persona,
      </if>
      <if test="id_tipo_persona != null" >
        id_tipo_persona,
      </if>
      <if test="id_sub_tipo_persona != null" >
        id_sub_tipo_persona,
      </if>
      <if test="id_estado != null" >
        id_estado,
      </if>
      <if test="id_usuario_reg != null" >
        id_usuario_reg,
      </if>
      <if test="fecha_registro != null" >
        fecha_registro,
      </if>
      <if test="id_usuario_mod != null" >
        id_usuario_mod,
      </if>
      <if test="fecha_modificacion != null" >
        fecha_modificacion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id_persona != null" >
        #{id_persona,jdbcType=INTEGER},
      </if>
      <if test="id_tipo_persona != null" >
        #{id_tipo_persona,jdbcType=INTEGER},
      </if>
      <if test="id_sub_tipo_persona != null" >
        #{id_sub_tipo_persona,jdbcType=INTEGER},
      </if>
      <if test="id_estado != null" >
        #{id_estado,jdbcType=INTEGER},
      </if>
      <if test="id_usuario_reg != null" >
        #{id_usuario_reg,jdbcType=INTEGER},
      </if>
      <if test="fecha_registro != null" >
        #{fecha_registro,jdbcType=TIMESTAMP},
      </if>
      <if test="id_usuario_mod != null" >
        #{id_usuario_mod,jdbcType=INTEGER},
      </if>
      <if test="fecha_modificacion != null" >
        #{fecha_modificacion,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pe.com.acme.domain.mybatis.model.PersonaTipoExample" resultType="java.lang.Integer" >
    select count(*) from general.persona_tipo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update general.persona_tipo
    <set >
      <if test="record.id_persona != null" >
        id_persona = #{record.id_persona,jdbcType=INTEGER},
      </if>
      <if test="record.id_tipo_persona != null" >
        id_tipo_persona = #{record.id_tipo_persona,jdbcType=INTEGER},
      </if>
      <if test="record.id_sub_tipo_persona != null" >
        id_sub_tipo_persona = #{record.id_sub_tipo_persona,jdbcType=INTEGER},
      </if>
      <if test="record.id_estado != null" >
        id_estado = #{record.id_estado,jdbcType=INTEGER},
      </if>
      <if test="record.id_usuario_reg != null" >
        id_usuario_reg = #{record.id_usuario_reg,jdbcType=INTEGER},
      </if>
      <if test="record.fecha_registro != null" >
        fecha_registro = #{record.fecha_registro,jdbcType=TIMESTAMP},
      </if>
      <if test="record.id_usuario_mod != null" >
        id_usuario_mod = #{record.id_usuario_mod,jdbcType=INTEGER},
      </if>
      <if test="record.fecha_modificacion != null" >
        fecha_modificacion = #{record.fecha_modificacion,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update general.persona_tipo
    set id_persona = #{record.id_persona,jdbcType=INTEGER},
      id_tipo_persona = #{record.id_tipo_persona,jdbcType=INTEGER},
      id_sub_tipo_persona = #{record.id_sub_tipo_persona,jdbcType=INTEGER},
      id_estado = #{record.id_estado,jdbcType=INTEGER},
      id_usuario_reg = #{record.id_usuario_reg,jdbcType=INTEGER},
      fecha_registro = #{record.fecha_registro,jdbcType=TIMESTAMP},
      id_usuario_mod = #{record.id_usuario_mod,jdbcType=INTEGER},
      fecha_modificacion = #{record.fecha_modificacion,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pe.com.acme.domain.mybatis.model.PersonaTipo" >
    update general.persona_tipo
    <set >
      <if test="id_estado != null" >
        id_estado = #{id_estado,jdbcType=INTEGER},
      </if>
      <if test="id_usuario_reg != null" >
        id_usuario_reg = #{id_usuario_reg,jdbcType=INTEGER},
      </if>
      <if test="fecha_registro != null" >
        fecha_registro = #{fecha_registro,jdbcType=TIMESTAMP},
      </if>
      <if test="id_usuario_mod != null" >
        id_usuario_mod = #{id_usuario_mod,jdbcType=INTEGER},
      </if>
      <if test="fecha_modificacion != null" >
        fecha_modificacion = #{fecha_modificacion,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id_persona = #{id_persona,jdbcType=INTEGER}
      and id_tipo_persona = #{id_tipo_persona,jdbcType=INTEGER}
      and id_sub_tipo_persona = #{id_sub_tipo_persona,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pe.com.acme.domain.mybatis.model.PersonaTipo" >
    update general.persona_tipo
    set id_estado = #{id_estado,jdbcType=INTEGER},
      id_usuario_reg = #{id_usuario_reg,jdbcType=INTEGER},
      fecha_registro = #{fecha_registro,jdbcType=TIMESTAMP},
      id_usuario_mod = #{id_usuario_mod,jdbcType=INTEGER},
      fecha_modificacion = #{fecha_modificacion,jdbcType=TIMESTAMP}
    where id_persona = #{id_persona,jdbcType=INTEGER}
      and id_tipo_persona = #{id_tipo_persona,jdbcType=INTEGER}
      and id_sub_tipo_persona = #{id_sub_tipo_persona,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="pe.com.acme.domain.mybatis.model.PersonaTipoExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from general.persona_tipo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>