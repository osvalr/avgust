/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by GeneratorCrud v.1.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   29/03/2016 22:54:29
*/

Ext.define('MyApp.controller.Character.MainController', {
    extend: 'Ext.app.Controller',

    stores: ['Character.MainStore'],

    models: ['Character.MainModel'],

    views: ['Character.List','Character.AddPointForm'],

    refs: [
    	{
            ref: 'CharacterPanel',
            selector: 'panel'
        },
        {
            ref: 'CharacterList',
            selector: 'CharacterList'
        }
    ],

    init: function() {
    
        this.control({
            'CharacterList button[action=add]': {
            	click: this.showFormAddPoints
            },
            'CharacterList button[action=reset]': {
                click: this.reset
            },
            'CharacterList button[action=pkClear]': {
                click: this.pkClear
            }
            ,
            'AddPointForm button[action=save]': {
                click: this.save
            }
        });
    },

    showFormAddPoints: function(grid, record) {
    	var grid = this.getCharacterList();
    	var record = grid.getSelectionModel().getSelection();
    	var store = Ext.getStore('Character.MainStore');
    	
    	if(record.length > 0){

    		var edit = Ext.create('MyApp.view.Character.AddPointForm').show();
    		edit.down('form').loadRecord(record[0]);        
    	}
    },
    
    save: function(button) {
        var win = button.up('window');
        var form = win.down('form');
        var record = form.getRecord();
        var values = form.getValues();
        var store = Ext.getStore('Character.MainStore');
        var me = this;
        if (form.isValid()) {
	        Ext.Msg.confirm('Confirm','Are you sure to continue?',function (btn) {
	            
	            if (btn == 'yes') {

	        		form.submit({
	        			clientValidation : false,
	        			url : '/MuWSRestApp/api/Character/addPoints',
	        			scope : me,
	        			success : function(form, action){
	        				
                	    		win.close();
                	    		store.load();
                	    		
	        			},
	                    failure: function (formPanel, action) {
	                    	var json = Ext.decode(action.response.responseText);
	                    	Ext.MessageBox.show({
                                title: 'REMOTE EXCEPTION',
                                msg: json.message,
                                icon: Ext.MessageBox.ERROR,
                                buttons: Ext.Msg.OK
                            });
	                    }
	        		});
	            	
	            }
	            
	        });
		}
    },
    
    reset: function(button) {
    	var grid = this.getCharacterList();
    	var record = grid.getSelectionModel().getSelection();
    	var store = Ext.getStore('Character.MainStore');
    	
    	if(record.length > 0){
	        Ext.Msg.confirm('Confirm','Are you sure to continue? <b><br> Info <br> Reset: 400lvl <br> Zen: 80,000,000 <br> Stats Clean: Yes <br> Inventory Clean: No</b>',function (btn) {
	                if (btn == 'yes') {
	                	Ext.Ajax.request({
	                	    url: '/MuWSRestApp/api/Character/reset',
	                	    params: {
	                	    	AccountID: record[0].data.accountID,
	                	    	NameCharacter: record[0].data.name
	                	    },
	                	    success: function(response){
	                	    	
	                	    	var json = JSON.parse(response.responseText);
	                	    	if(!json.success){
	                                Ext.MessageBox.show({
	                                    title: 'REMOTE EXCEPTION',
	                                    msg: json.message,
	                                    icon: Ext.MessageBox.ERROR,
	                                    buttons: Ext.Msg.OK
	                                });
	                	    	}else{
	                	    		store.load();
	                	    	}
	                	    	
	                	    }
	                	});
	                }
	        });
    	}
    },
    
    pkClear: function(button) {
    	var grid = this.getCharacterList();
    	var record = grid.getSelectionModel().getSelection();
    	var store = Ext.getStore('Character.MainStore');
    	
    	if(record.length > 0){
	        Ext.Msg.confirm('Confirm','Are you sure to continue? <b><br> Info <br> Zen Required: 100,000,000 </b>',function (btn) {
	                if (btn == 'yes') {
	                	Ext.Ajax.request({
	                	    url: '/MuWSRestApp/api/Character/pkClear',
	                	    params: {
	                	    	AccountID: record[0].data.accountID,
	                	    	NameCharacter: record[0].data.name
	                	    },
	                	    success: function(response){
	                	    	
	                	    	var json = JSON.parse(response.responseText);
	                	    	if(!json.success){
	                                Ext.MessageBox.show({
	                                    title: 'REMOTE EXCEPTION',
	                                    msg: json.message,
	                                    icon: Ext.MessageBox.ERROR,
	                                    buttons: Ext.Msg.OK
	                                });
	                	    	}else{
	                	    		store.load();
	                	    	}
	                	    	
	                	    }
	                	});
	                }
	        });
    	}
    }
});