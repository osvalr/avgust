<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pe.com.acme.domain.mybatis.mapper.CharacterMapper" >
  
  <resultMap id="BaseResultMap" type="pe.com.acme.domain.mybatis.model.Character" >
    <id column="Name" property="name" jdbcType="VARCHAR" />
    <result column="AccountID" property="accountID" jdbcType="VARCHAR" />
    <result column="cLevel" property="cLevel" jdbcType="INTEGER" />
    <result column="LevelUpPoint" property="levelUpPoint" jdbcType="INTEGER" />
    <result column="Strength" property="strength" jdbcType="INTEGER" />
    <result column="Dexterity" property="dexterity" jdbcType="INTEGER" />
    <result column="Vitality" property="vitality" jdbcType="INTEGER" />
    <result column="Energy" property="energy" jdbcType="INTEGER" />
    <result column="Money" property="money" jdbcType="INTEGER" />
    <result column="Leadership" property="leadership" jdbcType="INTEGER" />
    <result column="PkLevel" property="pklevel" jdbcType="INTEGER" />
    <result column="PkCount" property="pkcount" jdbcType="INTEGER" />
    <result column="Resets" property="resets" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Name, AccountID, cLevel, LevelUpPoint, Strength, Dexterity, Vitality, 
    Energy, Money, Leadership,PkLevel,PkCount, Resets
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pe.com.acme.domain.mybatis.model.CharacterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dbo.Character
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="pe.com.acme.domain.mybatis.model.CharacterKey" >
    select 
    <include refid="Base_Column_List" />
    from dbo.Character
    where Name = #{name,jdbcType=VARCHAR}
  </select>

  <update id="updateByExample" parameterType="map" >
    update dbo.Character
    set Name = #{record.name,jdbcType=VARCHAR},
      AccountID = #{record.accountID,jdbcType=VARCHAR},
      cLevel = #{record.cLevel,jdbcType=INTEGER},
      LevelUpPoint = #{record.levelUpPoint,jdbcType=INTEGER},
      
      Strength = #{record.strength,jdbcType=INTEGER},
      Dexterity = #{record.dexterity,jdbcType=INTEGER},
      Vitality = #{record.vitality,jdbcType=INTEGER},
      Energy = #{record.energy,jdbcType=INTEGER},
      Money = #{record.money,jdbcType=INTEGER},
      
      Leadership = #{record.leadership,jdbcType=INTEGER},
      
      PkLevel = #{record.pklevel,jdbcType=INTEGER},
      PkCount = #{record.pkcount,jdbcType=INTEGER},
      
      Resets = #{record.resets,jdbcType=INTEGER}
      
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="pe.com.acme.domain.mybatis.model.Character" >
    update dbo.Character
    set AccountID = #{accountID,jdbcType=VARCHAR},
      cLevel = #{cLevel,jdbcType=INTEGER},
      LevelUpPoint = #{levelUpPoint,jdbcType=INTEGER},
      Strength = #{strength,jdbcType=INTEGER},
      Dexterity = #{dexterity,jdbcType=INTEGER},
      Vitality = #{vitality,jdbcType=INTEGER},
      Energy = #{energy,jdbcType=INTEGER},
      Money = #{money,jdbcType=INTEGER},
      
      Leadership = #{leadership,jdbcType=INTEGER},
      
      PkLevel = #{pklevel,jdbcType=INTEGER},
      PkCount = #{pkcount,jdbcType=INTEGER},
      
      Resets = #{resets,jdbcType=INTEGER}
      
    where Name = #{name,jdbcType=VARCHAR}
  </update>
  
  <select resultMap="BaseResultMap" parameterType="pe.com.acme.domain.mybatis.model.CharacterExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dbo.Character
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>