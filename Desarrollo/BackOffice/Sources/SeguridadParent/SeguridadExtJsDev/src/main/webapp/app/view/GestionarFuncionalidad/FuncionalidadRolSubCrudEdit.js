/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by MybatisModelGenerator v.3.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   28/02/2016 02:49:06
*/

Ext.define('MyApp.view.GestionarFuncionalidad.FuncionalidadRolSubCrudEdit', {
    extend: 'Ext.window.Window',
    alias : 'widget.FuncionalidadRolSubCrudEdit',

    requires: ['Ext.form.Panel'],

    layout: 'fit',
    autoShow: true,
    modal: true,
    floating: true,
    resizable: false,
    width: 350,
    
    glyph:'xf044@FontAwesome',

    initComponent: function() {
        this.items = [
            {
                xtype: 'form',
                id: 'form_submodel_FuncionalidadRolSubCrud',
                padding: '5 5 0 5',
                border: false,
                style: 'background-color: #fff;',
                
                fieldDefaults: {
                    anchor: '100%',
                    labelAlign: 'left',
                    allowBlank: false,
                    combineErrors: true,
                    msgTarget: 'qtip',
                    labelWidth: 125
                },

                items: [
					{
					    readOnly : false,
						allowBlank : true,
						hidden : true,
						xtype : 'textfield',
						name : 'id_funcionalidad',
						fieldLabel : 'id_funcionalidad',
						disabled : false,
						editable : true
					}
					,{
					    listeners : {
						     change: function(field, newValue, oldValue) {

						          var form = Ext.getCmp('form_submodel_FuncionalidadRolSubCrud');
						          var on_field = form.getForm().findField('id_rol');
						          on_field.setDisabled(true);
						          on_field.store.removeAll();
						          on_field.store.reload({
						               params: {
						                   		id_aplicacion: field.getValue()
						               }
						          });
						          on_field.setDisabled(false);
						          if(oldValue != null){
										on_field.setValue('');
						          }
						    }
						},
						readOnly : false,
						store : {
								fields: ['id_aplicacion','nombre_aplicacion'],
								proxy: {
							         type: 'ajax',
							         url: '/SeguridadWSRestApp/api/seguridad/appPorNombre',
							         reader: {
							             type: 'json',
							             rootProperty: 'list'
							         }
						    	},
								autoLoad: true
					    },
						queryMode : 'local',
						displayField : 'nombre_aplicacion',
						hidden : false,
						xtype : 'combobox',
						name : 'id_aplicacion',
						valueField : 'id_aplicacion',
						emptyText : '-- Seleccione Opción --',
						fieldLabel : 'Aplicación',
						disabled : false,
						editable : true
					}
					,{
					    readOnly : false,
						store : {
								fields: ['id_rol','nombre_rol'],
								proxy: {
							         type: 'ajax',
							         url: '/SeguridadWSRestApp/api/seguridad/rolPorAplicacion',
							         reader: {
							             type: 'json',
							             rootProperty: 'list'
							         }
						    	},
								autoLoad: false
					    },
						queryMode : 'local',
						displayField : 'nombre_rol',
						hidden : false,
						xtype : 'combobox',
						name : 'id_rol',
						valueField : 'id_rol',
						emptyText : '-- Seleccione Opción --',
						fieldLabel : 'Rol',
						disabled : false,
						editable : true
					}
					,{
					    readOnly : false,
						store : {
								fields: ['valor_item','descrip_item'],
								proxy: {
							         type: 'ajax',
							         url: '/SeguridadWSRestApp/api/catalogo/buscarPorNombre?nombre_catalogo=estado_generico',
							         reader: {
							             type: 'json',
							             rootProperty: 'list'
							         }
						    	},
								autoLoad: true
					    },
						queryMode : 'local',
						displayField : 'descrip_item',
						hidden : false,
						xtype : 'combobox',
						name : 'id_estado',
						valueField : 'valor_item',
						emptyText : '-- Seleccione Opción --',
						fieldLabel : 'Estado',
						disabled : false,
						editable : false
					}
                ]
            }
        ];
        
        this.dockedItems = [{
            xtype: 'toolbar',
            dock: 'bottom',
            //id:'buttons_FuncionalidadRolSubCrud',
            ui: 'footer',
            items: ['->', {
            	glyph:'xf0c7@FontAwesome',
                itemId: 'save',
                text: 'Grabar',
                action: 'save'
            },{
            	glyph:'xf00d@FontAwesome',
                text: 'Cancelar',
                scope: this,
                handler: this.close
            }]
        }];

        this.callParent(arguments);
    }
});
