/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by MybatisModelGenerator v.3.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   26/02/2016 18:07:06
*/

package pe.com.acme.seguridad.business.implement;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import pe.com.acme.util.DtoUtil;
import pe.com.acme.util.MybatisRepositoryHelper;

import pe.com.acme.seguridad.business.service.GestionarPerfilService;
import pe.com.acme.query.mybatis.model.PerfilCrud;
import pe.com.acme.query.mybatis.model.PerfilCrudCriteria;
import pe.com.acme.query.mybatis.mapper.PerfilCrudMapper;

import pe.com.acme.domain.mybatis.model.Perfil;
import pe.com.acme.domain.mybatis.mapper.PerfilMapper;

@Service
public class GestionarPerfilServiceImpl extends MybatisRepositoryHelper implements GestionarPerfilService {

	@Autowired
	private DtoUtil dtoUtil;
	
	@Transactional(rollbackForClassName = {"Exception"})
	@Override
	public Integer create(PerfilCrud model) throws Exception {
	
		Integer lastId = null;

		Perfil perfil = dtoUtil.copyBean(model, Perfil.class);
		this.insertSelective(PerfilMapper.class, perfil);

		lastId = perfil.getId_perfil();
		return lastId;
	}
	
	@Transactional(rollbackForClassName = {"Exception"})
	@Override
	public void update(PerfilCrud model) throws Exception {

		Perfil perfil = dtoUtil.copyBean(model, Perfil.class);
		this.updateByPrimaryKeySelective(PerfilMapper.class, perfil);
		
	}

	@Transactional(rollbackForClassName = {"Exception"})
	@Override
	public void destroy(PerfilCrud model) throws Exception {

		Perfil perfil = dtoUtil.copyBean(model, Perfil.class);
		this.deleteByPrimaryKey(PerfilMapper.class, perfil);
	}

	@Transactional(rollbackForClassName = {"Exception"})
	@Override
	public List<PerfilCrud> list(PerfilCrudCriteria criteria) throws Exception {
		List<PerfilCrud> list = this.selectByQuery(PerfilCrudMapper.class, criteria);
		return list;
	}

	@Transactional(rollbackForClassName = {"Exception"})
	@Override
	public int countRecords(PerfilCrudCriteria criteria) throws Exception {
		int count = this.selectCountByQuery(PerfilCrudMapper.class, criteria);
		return count;
	}
}
