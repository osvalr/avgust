/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by GeneratorCrud v.1.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   26/02/2016 20:14:59
*/

package pe.com.acme.seguridad.web.controller;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import pe.com.acme.query.mybatis.model.RolAplicacionCrud;
import pe.com.acme.query.mybatis.model.RolAplicacionCrudCriteria;
import pe.com.acme.seguridad.business.service.GestionarRolService;
import pe.com.acme.util.JsonReturnUtil;
import pe.com.acme.util.ModelWrapper;
import pe.com.acme.util.web.ControllerHelper;

import javax.servlet.http.HttpServletRequest;
import java.util.List;
import java.util.Map;

@Controller
@RequestMapping("/GestionarRol")
public class GestionarRolController extends ControllerHelper {

    private static Logger log = Logger.getLogger(GestionarRolController.class);

	@Autowired
	private GestionarRolService gestionarRolService;
	
	@RequestMapping(value="/list")
	public @ResponseBody Map<String,? extends Object> list(HttpServletRequest request) {
		try{
			RolAplicacionCrudCriteria rolAplicacionCrudCriteria = this.loadCriteria(request, RolAplicacionCrudCriteria.class);
            List<RolAplicacionCrud> listRolAplicacionCrud = gestionarRolService.list(rolAplicacionCrudCriteria);
			int count = gestionarRolService.countRecords(rolAplicacionCrudCriteria);
			return JsonReturnUtil.success(listRolAplicacionCrud,count);
		} catch (Exception e) {
            log.error(e.getMessage(),e);
			return JsonReturnUtil.exception(e.getMessage());
		}
	}
	
	@RequestMapping(value="/create")
	public @ResponseBody Map<String,? extends Object> create(@RequestBody ModelWrapper<RolAplicacionCrud> modelWrapper) {
		try{
			gestionarRolService.create(modelWrapper.getData());
			return JsonReturnUtil.success(modelWrapper.getData().getId_rol());
		} catch (Exception e) {
            log.error(e.getMessage(),e);
			return JsonReturnUtil.exception(e.getMessage());
		}
	}
	
	@RequestMapping(value="/update")
	public @ResponseBody Map<String,? extends Object> update(@RequestBody ModelWrapper<RolAplicacionCrud> modelWrapper) {
		try{
			gestionarRolService.update(modelWrapper.getData());
			return JsonReturnUtil.success();
		} catch (Exception e) {
            log.error(e.getMessage(),e);
			return JsonReturnUtil.exception(e.getMessage());
		}
	}
	
	@RequestMapping(value="/destroy")
	public @ResponseBody Map<String,? extends Object> destroy(@RequestBody ModelWrapper<RolAplicacionCrud> modelWrapper) {
		try{
			gestionarRolService.destroy(modelWrapper.getData());
			return JsonReturnUtil.success();
		} catch (Exception e) {
            log.error(e.getMessage(),e);
			return JsonReturnUtil.exception(e.getMessage());
		}
	}
}
