/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by GeneratorCrud v.1.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   26/02/2016 18:07:06
*/

package pe.com.acme.seguridad.web.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import org.apache.log4j.Logger;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import pe.com.acme.util.web.ControllerHelper;
import pe.com.acme.util.JsonReturnUtil;
import pe.com.acme.util.ModelWrapper;

import pe.com.acme.seguridad.business.service.GestionarPerfilService;
import pe.com.acme.query.mybatis.model.PerfilCrud;
import pe.com.acme.query.mybatis.model.PerfilCrudCriteria;

@Controller
@RequestMapping("/GestionarPerfil")
public class GestionarPerfilController extends ControllerHelper {

    private static Logger log = Logger.getLogger(GestionarPerfilController.class);

	@Autowired
	private GestionarPerfilService gestionarPerfilService;
	
	@RequestMapping(value="/list")
	public @ResponseBody Map<String,? extends Object> list(HttpServletRequest request) {
		try{
			PerfilCrudCriteria perfilCrudCriteria = this.loadCriteria(request, PerfilCrudCriteria.class);
            List<PerfilCrud> listPerfilCrud = gestionarPerfilService.list(perfilCrudCriteria);
			int count = gestionarPerfilService.countRecords(perfilCrudCriteria);
			return JsonReturnUtil.success(listPerfilCrud,count);
		} catch (Exception e) {
            log.error(e.getMessage(),e);
			return JsonReturnUtil.exception(e.getMessage());
		}
	}
	
	@RequestMapping(value="/create")
	public @ResponseBody Map<String,? extends Object> create(@RequestBody ModelWrapper<PerfilCrud> modelWrapper) {
		try{
			gestionarPerfilService.create(modelWrapper.getData());
			return JsonReturnUtil.success(modelWrapper.getData().getId_perfil());
		} catch (Exception e) {
            log.error(e.getMessage(),e);
			return JsonReturnUtil.exception(e.getMessage());
		}
	}
	
	@RequestMapping(value="/update")
	public @ResponseBody Map<String,? extends Object> update(@RequestBody ModelWrapper<PerfilCrud> modelWrapper) {
		try{
			gestionarPerfilService.update(modelWrapper.getData());
			return JsonReturnUtil.success();
		} catch (Exception e) {
            log.error(e.getMessage(),e);
			return JsonReturnUtil.exception(e.getMessage());
		}
	}
	
	@RequestMapping(value="/destroy")
	public @ResponseBody Map<String,? extends Object> destroy(@RequestBody ModelWrapper<PerfilCrud> modelWrapper) {
		try{
			gestionarPerfilService.destroy(modelWrapper.getData());
			return JsonReturnUtil.success();
		} catch (Exception e) {
            log.error(e.getMessage(),e);
			return JsonReturnUtil.exception(e.getMessage());
		}
	}
}
