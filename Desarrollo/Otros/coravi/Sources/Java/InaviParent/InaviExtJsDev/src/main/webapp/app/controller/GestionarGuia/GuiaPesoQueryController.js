/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by MybatisModelGenerator v.3.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   05/03/2016 15:14:59
*/

Ext.define('MyApp.controller.GestionarGuia.GuiaPesoQueryController', {
    extend: 'Ext.app.Controller',

    stores: ['GestionarGuia.GuiaPesoQueryStore'],

    models: ['GestionarGuia.GuiaPesoQueryModel'],

    views: ['GestionarGuia.GuiaPesoQueryEdit', 'GestionarGuia.GuiaPesoQueryList'],

    refs: [
    	{
            ref: 'GuiaPesoQueryPanel',
            selector: 'panel'
        },
        {
            ref: 'GuiaPesoQueryList',
            selector: 'GuiaPesoQueryList'
        }
    ],

    init: function() {
        this.control({
            'GuiaPesoQueryList dataview': {
                itemdblclick: this.editRecord
            },
            'GuiaPesoQueryList button[action=add]': {
            	click: this.editRecord
            },
            'GuiaPesoQueryList button[action=delete]': {
                click: this.deleteRecord
            },
            'GuiaPesoQueryEdit button[action=save]': {
                click: this.updateRecord
            }
        });
    },

    editRecord: function(grid, record) {
        var edit = Ext.create('MyApp.view.GestionarGuia.GuiaPesoQueryEdit').show();
        var form = edit.down('form');
        
        if(record.data){
        	edit.down('form').loadRecord(record);
        	edit.setTitle('Editar');
        }else{
        	edit.setTitle('Agregar');
        	
          	var id_estado = form.getForm().findField('id_estado');
          	id_estado.setReadOnly(true);
          	id_estado.setValue(1);
          	
        }
    },
    
    updateRecord: function(button) {
    	
        var win = button.up('window');
        var form = win.down('form');
        var record = form.getRecord();
        var values = form.getValues();
        var store = Ext.getStore('GestionarGuia.GuiaPesoQueryStore');
        
        var id_tipo_peso = form.getForm().findField('id_tipo_peso');
        values.descrip_tipo_peso = id_tipo_peso.getRawValue();
        
        var id_estado = form.getForm().findField('id_estado');
        values.descrip_estado = id_estado.getRawValue();
        
        var me = this;
        
        if (form.isValid()) {

                
                    if(win.title === 'Editar') {
                        record.set(values);
                    } else{
                        record = Ext.create('MyApp.model.GestionarGuia.GuiaPesoQueryModel');
                        record.set(values);
                        store.add(record);
                    }

                    var countUpdatedRecords = store.getModifiedRecords();
                    var countNewRecords = store.getNewRecords();
                                        
                    if(countNewRecords.length > 0){
                    	store.sync({
                            success: function (batch, eOpts) {
                                store.load({params: {id_guia: null}});
    							//Obtenemos Totales
    				        	me.setGuiaTotales();
//                                win.close();

    				    		var num_jabas = form.getForm().findField('num_jabas');
    				    		var num_aves = form.getForm().findField('num_aves');
    				    		var peso_obtenido = form.getForm().findField('peso_obtenido');
    				    		var flag_devolucion = form.getForm().findField('flag_devolucion');
    				    		
    				    		num_jabas.setValue('');
    				    		num_aves.setValue('');
    				    		peso_obtenido.setValue('');
    				    		flag_devolucion.setValue(2);
    				    		
    				    		num_jabas.focus(false, 200);
                            }
                        });
                    }else{
                        if(countUpdatedRecords.length > 0){
                        	
                            store.sync({
                                success: function (batch, eOpts) {
                                    store.load({params: {id_guia: null}});
        							//Obtenemos Totales
        				        	me.setGuiaTotales();
                                    win.close();
                                }
                            });
                            
                        }else{
                        	win.close();
                        }
                    }
                    

        
        }
    },
    deleteRecord: function(button) {
    	
    	var grid = this.getGuiaPesoQueryList();
    	var record = grid.getSelectionModel().getSelection(); 
    	var store = Ext.getStore('GestionarGuia.GuiaPesoQueryStore');
    	
    	var me = this;
    	
    	if(record.length > 0){
	        Ext.Msg.confirm('Confirmar','¿Estás seguro de ELIMINAR el registro?',function (btn) {
	                if (btn == 'yes') {
	             	   store.remove(record);
						store.sync({
					        success: function (batch, eOpts) {
					            store.load({params: {id_guia: null}});
								//Obtenemos Totales
					        	me.setGuiaTotales();
					        }
					    });
	                }
	        });
    	}

    },
    setGuiaTotales: function() {
    	Ext.Ajax.request({
            method: 'GET',
            url: '/InaviWSRestApp/api/GestionarGuia/guiaTotales',
            success: function( result, request ){
            	
            	var json = Ext.JSON.decode(result.responseText);
            	var formTotales = Ext.getCmp('form_totales');
            	
            	total_peso_bruto = formTotales.getForm().findField('total_peso_bruto');
            	total_peso_tara = formTotales.getForm().findField('total_peso_tara');
            	total_peso_devolucion = formTotales.getForm().findField('total_peso_devolucion');
            	total_peso_tara_devo = formTotales.getForm().findField('total_peso_tara_devo');
            	total_peso_neto = formTotales.getForm().findField('total_peso_neto');
            	taraCompleta = formTotales.getForm().findField('taraCompleta');

            	total_peso_bruto.setValue(json.record.total_peso_bruto);
            	total_peso_tara.setValue(json.record.total_peso_tara);
            	total_peso_devolucion.setValue(json.record.total_peso_devolucion);
            	total_peso_tara_devo.setValue(json.record.total_peso_tara_devo);
            	total_peso_neto.setValue(json.record.total_peso_neto);
            	taraCompleta.setValue(json.record.taraCompleta);
            }
        });
    }
    
});