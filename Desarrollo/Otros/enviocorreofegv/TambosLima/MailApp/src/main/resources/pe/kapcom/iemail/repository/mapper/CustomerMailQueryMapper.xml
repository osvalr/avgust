<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="pe.kapcom.iemail.repository.mapper.CustomerMailQueryMapper">

<sql id="outs"> 
<![CDATA[

*

]]>
</sql> 

<sql id="from"> 
<![CDATA[

vis_sunat_lstdocpencabMail x

]]>
</sql> 

<sql id="inputs"> 
<![CDATA[

1=1

]]>
</sql> 

<sql id="order"> 
<![CDATA[
]]>
</sql> 

<select id="getListQueryByCriteria" resultType="pe.kapcom.iemail.repository.dto.CustomerMailQuery" parameterType="pe.kapcom.iemail.repository.dto.CustomerMailQueryCriteria">
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="pe.kapcom.iemail.repository.dto.CustomerMailQuery" parameterType="java.util.Map">
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="pe.kapcom.iemail.repository.dto.CustomerMailQuery" parameterType="pe.kapcom.iemail.repository.dto.CustomerMailQueryCriteria">
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="pe.kapcom.iemail.repository.dto.CustomerMailQuery" parameterType="java.util.Map">
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="pe.kapcom.iemail.repository.dto.CustomerMailQueryCriteria">
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
