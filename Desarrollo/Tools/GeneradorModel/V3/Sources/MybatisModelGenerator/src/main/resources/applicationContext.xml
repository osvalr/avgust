<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
     http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/jdbc 
http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
     http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.sqlite.JDBC"/>
		<property name="url" value="jdbc:sqlite:database/database_app.db"/>		
	</bean>
	
	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- enable component scanning and autowire (beware that this does not enable mapper scanning!)     -->
	<context:component-scan base-package="pe.com.jrtotem.app.generator.service"/>
	<context:component-scan base-package="pe.com.jrtotem.app.generator.util"/>

	<!--  enable transaction demarcation with annotations -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="typeAliasesPackage" value="pe.com.jrtotem.app.generator.mybatis.domain;pe.com.jrtotem.app.generator.mybatis.query.domain"/>
	</bean>
	<!-- define the SqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>
	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="pe.com.jrtotem.app.generator.mybatis.mapper;pe.com.jrtotem.app.generator.mybatis.query.mapper"/>
	</bean>

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">file</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.FileResourceLoader
				</prop>
			</props>
		</property>
	</bean>
	
</beans>