/**
* Copyright «©» ${anho}, FOCUS CONSULTORES ASOCIADOS SAC. All rights reserved.
*
* This file is part of ${nameApp}.
*
* ${nameApp} is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* ${nameApp} is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with ${nameApp}.  If not, see <http://www.gnu.org/licenses/>.
*/	 

/**
* GENERATOR CRUD EXT JS 5            
* BY FOCUS CONSULTORES ASOCIADOS SAC  
* DATE CREATE : ${datetimeCreate}
* VERSION : 1.0 
*/

package ${packageServiceImpl};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import pe.com.focus.util.BeanUtil;
import pe.com.focus.repository.mybatis.util.BusinessException;
import pe.com.focus.repository.mybatis.util.HelperServiceImpl;

import ${packageService}.${nameService}Service;
import ${classModel};

#foreach( $e in $entity )
import ${e.classEntity};
import ${e.classMapperEntity};
#end

@Service
public class ${nameServiceImpl}ServiceImpl extends HelperServiceImpl implements ${nameService}Service {

	@Autowired
	private BeanUtil beanUtil;
	
	@Transactional
	@Override
	public Integer execute(${nameModel} model) throws BusinessException {
#set($counter = 0)
#set($nameVar = "")
#set($nameMethod = "")
#foreach( $e in $entity )
#if($counter==0)
		Integer lastId = null;
		${e.nameEntity} ${e.nameVarEntity} = beanUtil.copyBean(model, ${e.nameEntity}.class);
		this.insertSelective(${e.nameMapperEntity}.class, ${e.nameVarEntity});
		lastId = ${e.nameVarEntity}.${e.primaryKeyGetMethod}();
#else
		${e.nameEntity} ${e.nameVarEntity} = beanUtil.copyBean(model, ${e.nameEntity}.class);
		${e.nameVarEntity}.${e.primaryKeySetMethod}($nameVarEntityMain.$primaryKeyGetMethodMain());
		this.insertSelective(${e.nameMapperEntity}.class, ${e.nameVarEntity});
#end
		
#set($counter = $counter + 1)
#set($nameVarEntityMain = ${e.nameVarEntity})
#set($primaryKeyGetMethodMain = ${e.primaryKeyGetMethod})
#end
		return lastId;
	}
	
}
