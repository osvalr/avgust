/**
* Copyright «©» ${anho}, FOCUS CONSULTORES ASOCIADOS SAC. All rights reserved.
*
* This file is part of ${nameApp}.
*
* ${nameApp} is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* ${nameApp} is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with ${nameApp}.  If not, see <http://www.gnu.org/licenses/>.
*/	 

/**
* GENERATOR CRUD EXT JS 5            
* BY FOCUS CONSULTORES ASOCIADOS SAC  
* DATE CREATE : ${datetimeCreate}
* VERSION : 1.0 
*/

package ${packageController};

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import sernanp.app.util.BusinessException;
import sernanp.app.util.ExtJsStrutsUtil;
import sernanp.rrhh.web.action.helper.ActionHelperExtjs;

import ${packageService}.${nameService}Service;
import ${classModel};
import ${classModel}Criteria;
import ${classMapperModel};

public class ${nameController}Action extends ActionHelperExtjs {


	private static final long serialVersionUID = 1L;

	@Autowired
	private ${nameService}Service ${varNameService}Service;
	
	private ${nameModel} ${nameVarModel};
	
	public String view(){
		
		try{
			
			int start = this.getIntegerParameter("start");
			int limit = this.getIntegerParameter("limit");
			
			${nameModel}Criteria ${nameVarModel}Criteria = this.loadCriteria(this.getHttpRequest(), ${nameModel}Criteria.class);
			List<${nameModel}> list${nameModel} = ${varNameService}Service.getListByQuery(${nameMapperModel}.class, ${nameVarModel}Criteria, start, limit);
			int total = ${varNameService}Service.getCountRowsByQuery(${nameMapperModel}.class, ${nameVarModel}Criteria);
			
			this.success(list${nameModel},total);
			
		}catch(BusinessException e){
			this.exception(e.getMessage());
		}
		
		return SUCCESS;
	}
	
	public String create(){
		
		try{
			
			${varNameService}Service.create(${nameVarModel});
			this.success(${nameVarModel}, "Operation Success.");
			
		}catch(BusinessException e){
			this.exception(e.getMessage());
		}
		
		return SUCCESS;
	}
	
	public String save(){
		
		try{
			
			${varNameService}Service.save(${nameVarModel});
			this.success(${nameVarModel}, "Operation Success.");
			
		}catch(BusinessException e){
			this.exception(e.getMessage());
		}
		
		return SUCCESS;
	}
	
	public String remove(){
		
		try{
			
			${varNameService}Service.remove(${nameVarModel});
			this.extjsReturn.setSuccess(true);
			
		}catch(BusinessException e){
			this.exception(e.getMessage());
		}
		
		return SUCCESS;
	}
	
	@Override
	public ExtJsStrutsUtil getExtjsReturn() {
		return extjsReturn;
	}
	
	public ${nameService}Service ${nameGetMethodService}Service() {
		return ${varNameService}Service;
	}

	public void ${nameSetMethodService}Service(${nameService}Service ${varNameService}Service) {
		this.${varNameService}Service = ${varNameService}Service;
	}

	public ${nameModel} ${nameGetMethodModel}() {
		return ${nameVarModel};
	}

	public void ${nameSetMethodModel}(${nameModel} ${nameVarModel}) {
		this.${nameVarModel} = ${nameVarModel};
	}

/*
<!-- Start Actions ${nameController} -->
<action name="${nameController}View" class="${packageController}.${nameController}Action" method="view">
		<result type="json" />
</action>

<action name="${nameController}Create" class="${packageController}.${nameController}Action" method="create">
		<result type="json" />
</action>

<action name="${nameController}Save" class="${packageController}.${nameController}Action" method="save">
		<result type="json" />
</action>

<action name="${nameController}Remove" class="${packageController}.${nameController}Action" method="remove">
		<result type="json" />
</action>
<!-- End Actions ${nameController} -->
*/

}
