/*
* Copyright «©» ${anho}, J.R Totem. All rights reserved.
*
* This file was generated by MybatisModelGenerator v.3.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   ${datetimeCreate}
*/

Ext.define('MyApp.view.${name}.List' ,{
    extend: 'Ext.grid.Panel',
    alias : 'widget.${name}List',
    
    requires: ['MyApp.view.${name}.Filter'],

    glyph:'xf022@FontAwesome',

    title : '${titleCrud}',
    store: '${name}.MainStore',

    columns: [
#set($counter = 0)
#foreach( $e in $columns )
#if($counter==0)
		{
	    	header: "${e.header}",
			flex:${e.flex},
			dataIndex: '${e.fieldModel}',
			hidden:${e.hidden},
			sortable:true
		}
#else
		,{
			header: "${e.header}",
			flex:${e.flex},
			dataIndex: '${e.fieldModel}',
			hidden:${e.hidden},
			sortable:true
		}
#end
#set($counter = $counter + 1)
#end
	],
	
	initComponent: function() {
		
		this.dockedItems = [
		     {
		          xtype: '${name}Filter'
		     },
			 {
	            xtype: 'toolbar',
	            items: [
				            {
				            	glyph:'xf0b0@FontAwesome',
				                text: 'Filtrar',
				                action: 'filter'
				            },
				            '-',
				            {
				            	glyph:'xf12d@FontAwesome',
				                text: 'Limpiar',
				                action: 'clearFilter'
				            },
				            '-',
				            {
				            	glyph:'xf055@FontAwesome',
				                text: 'Agregar',
				                action: 'add'
				            },
				            '-',
				            {
				            	glyph:'xf056@FontAwesome',
				                text: 'Eliminar',
				                action: 'delete'
				            }
			           ]
	        },
	        {
	            xtype: 'pagingtoolbar',
	            dock:'top',
	            store: '${name}.MainStore',
	            displayInfo: true
	        }
        ];
		
		this.callParent(arguments);
        this.on('render', this.loadStore, this);
	},
    loadStore: function() {
        this.getStore().load();
    }
});
