/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by MybatisModelGenerator v.3.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   29/03/2016 22:54:29
*/

Ext.define('MyApp.view.GestionarGuia.CambiarPrecioGridPanel' ,{
    extend: 'Ext.grid.Panel',
    alias : 'widget.CambiarPrecioGridPanel',
    
//    iconCls:'icon-award_star_gold_3',

    title : 'Guias',
    
    store : Ext.create('Ext.data.Store', {
    	
    	fields: [
    	         {name: 'id_guia', type: 'integer'},
    	         {name: 'nombreCliente', type: 'string'},
    	         {name: 'pesoNeto', type: 'float'},
    	         {name: 'precioActual', type: 'float'},
    	         {name: 'nuevoPrecio', type: 'float'},
    	         {name: 'nuevoImporte', type: 'float'},
    	         {name: 'importeActual', type: 'float'}
    	        ],
    	        
    	proxy: {
    		type: 'ajax',
    		url: '/InaviWSRestApp/api/GestionarGuia/cambiarPrecioList',
            reader: {
                type: 'json',
                rootProperty: 'data',
                successProperty: 'success',
                totalProperty: 'total',
                messageProperty: 'message'
            }
    	},
    	pageSize: 10,
    	autoLoad: false,
        listeners: {
            exception: function(proxy, response, operation){	
                Ext.MessageBox.show({
                    title: 'REMOTE EXCEPTION',
                    msg: operation.getError(),
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.Msg.OK
                });
            },
            beforeload:function(field, event, options) {
            	
            	var cambiarPrecioGridPanel = Ext.getCmp('cambiarPrecioGridPanel');
            	var form = Ext.getCmp('form_cambiar_precio');
                var values = form.getValues();
                cambiarPrecioGridPanel.store.getProxy().extraParams = values;
                
            }
        }
    }),
    
    columns: [

		{
			header: "Cliente",
			flex:3,
			dataIndex: 'nombreCliente',
			hidden:false,
			sortable:false
		},
		{
			header: "Peso neto",
			flex:2,
			dataIndex: 'pesoNeto',
			hidden:false,
			sortable:false
		},
		{
			header: "Precio actual",
			flex:2,
			dataIndex: 'precioActual',
			hidden:false,
			sortable:false
		},
		{
			header: "Importe actual",
			flex:2,
			dataIndex: 'importeActual',
			hidden:false,
			sortable:false
		},
		{
			header: "Nuevo precio",
			flex:2,
			dataIndex: 'nuevoPrecio',
			hidden:false,
			sortable:false
		}
		,{
			header: "Nuevo importe",
			flex:2,
			dataIndex: 'nuevoImporte',
			hidden:false,
			sortable:false
		}
		
		
	],
	
	initComponent: function() {
		
		var me = this;
				
		this.dockedItems = [
			       	        {
			       	            xtype: 'pagingtoolbar',
			       	            dock:'top',
			       	            store: me.store,
			       	            displayInfo: true
			       	        }
		               ];
		
		this.callParent(arguments);
	}
});
