/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by MybatisModelGenerator v.3.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   10/03/2016 00:37:53
*/

Ext.define('MyApp.view.MttoSaldo.Edit', {
    extend: 'Ext.window.Window',
    alias : 'widget.MttoSaldoEdit',

    requires: ['Ext.form.Panel','MyApp.view.MttoSaldo.SaldoGuiaPesoQueryList','MyApp.util.GuiaUtil'],

    layout: 'fit',
    autoShow: true,
    modal: true,
    floating: true,
    resizable: false,
    width: '40%',

    iconCls:'icon-pencil',
    
    initComponent: function() {
        this.items = [
            {
                xtype: 'tabpanel',
                activeTab: 1,
                items: [
							{
				                xtype: 'form',
				                id: 'form_crud_MttoSaldo',
//				                padding: '5 5 0 5',
				                border: false,
				                style: 'background-color: #fff;',
				                title: 'Guia de Venta',
//				                iconCls:'fa fa-list-alt',
				                
				                fieldDefaults: {
					    			anchor: '100%',
				                    labelAlign: 'top',
				                    allowBlank: false,
				                    combineErrors: true,
				                    msgTarget: 'qtip',
				                    padding: '0 5 0 5',
				                    labelWidth: 100
			                	},
			                	
		                		items: [

{
    allowBlank : true,
    xtype : 'textfield',
    hidden : true,
    editable : true,
    fieldLabel : 'Id',
    name : 'id_guia',
    disabled : false,
    readOnly : true
},
{
	xtype: 'container',
	layout: {
		type: 'hbox'
	},
	items: [
	       
				{
				    allowBlank : true,
				    xtype : 'textfield',
				    hidden : false,
				    editable : true,
				    fieldLabel : 'Jornada',
				    name : 'fecha_jornada',
				    disabled : false,
				    readOnly : true,
				    flex:1
				}
				,{
				    allowBlank : true,
				    xtype : 'textfield',
				    hidden : false,
				    editable : true,
				    fieldLabel : 'Tipo Producto',
				    name : 'descrip_tipo_producto',
				    disabled : false,
				    readOnly : true,
				    flex:1
				}
				,{
				    allowBlank : true,
				    xtype : 'textfield',
				    hidden : false,
				    editable : true,
				    fieldLabel : 'Estado',
				    name : 'descrip_estado',
				    disabled : false,
				    readOnly : true,
				    flex:1
				}
				
	       ]
}


,{
    allowBlank : true,
    xtype : 'textfield',
    hidden : false,
    editable : true,
    fieldLabel : 'Cliente',
    name : 'nombre_cliente',
    disabled : false,
    readOnly : true
},
{
	xtype: 'container',
	layout: {
		type: 'hbox',
		padding: "0 0 5 0"
	},
	items: [
			{
			    allowBlank : true,
			    xtype : 'textfield',
			    hidden : false,
			    editable : false,
			    fieldLabel : 'T. Peso Neto',
			    name : 'total_peso_neto',
			    disabled : false,
			    readOnly : true,
			    flex:1
			}
			,{
			    allowBlank : true,
			    xtype : 'textfield',
			    hidden : false,
			    vtype : 'soloNumeroDecimales',
			    editable : true,
			    fieldLabel : 'Precio',
			    name : 'precio_aplicado',
			    disabled : false,
			    readOnly : true,
			    flex:1
			}
			,{
			    allowBlank : true,
			    xtype : 'textfield',
			    hidden : false,
			    editable : false,
			    fieldLabel : 'Total Importe',
			    name : 'total_importe',
			    disabled : false,
			    readOnly : true,
			    flex:1
			}
	       ]
	
}
											
										]
							}
							
							,{
					    		title: 'Saldo',
//					    		glyph:'xf022@FontAwesome',
					    		items: [{id:'subModel_GuiaSaldoQuery', xtype:'MainGuiaSaldoQueryList'}]
							}
							
							,{
					    		title: 'Pesos',
//					    		iconCls:'fa fa-list-alt',
					    		items: [{id:'subModel_SaldoGuiaPesoQuery', xtype:'SaldoGuiaPesoQueryList'}],
					    		listeners: {
					                activate: function(tab, eOpts) {
					                	var form = Ext.getCmp('form_crud_MttoSaldo');
					                	var id_guia = form.getForm().findField('id_guia');
					                	
					                	var subModel_SaldoGuiaPesoQuery = Ext.getCmp('subModel_SaldoGuiaPesoQuery');
					                	
					                	subModel_SaldoGuiaPesoQuery.store.reload({
					        				params: {id_guia: id_guia.getValue(), start:0, limit:1000},
					        				scope: this,
					        				callback: function(records, operation, success) {
					        					if (success) {
					        						//Obtenemos Totales
					        						MyApp.util.GuiaUtil.setGuiaTotales();
					        					}
					        				}
					        			});
					                }
					            }
							}

                ]
            }
        ];
        
        this.dockedItems = [{
            xtype: 'toolbar',
            dock: 'bottom',
            //id:'buttons',
            ui: 'footer',
            items: ['->', {
            	iconCls:'icon-disk_black',
                itemId: 'save',
                text: 'Grabar',
                action: 'save'
            },{
            	iconCls:'icon-cross',
                text: 'Cancelar',
                scope: this,
                handler: this.close
            }]
        }];

        this.callParent(arguments);      
    }
});
