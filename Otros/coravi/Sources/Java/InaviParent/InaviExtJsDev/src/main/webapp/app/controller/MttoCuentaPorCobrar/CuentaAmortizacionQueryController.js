/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by MybatisModelGenerator v.3.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   25/07/2016 19:41:32
*/

Ext.define('MyApp.controller.MttoCuentaPorCobrar.CuentaAmortizacionQueryController', {
    extend: 'Ext.app.Controller',

    stores: ['MttoCuentaPorCobrar.CuentaAmortizacionQueryStore'],

    models: ['MttoCuentaPorCobrar.CuentaAmortizacionQueryModel'],

    views: ['MttoCuentaPorCobrar.CuentaAmortizacionQueryEdit', 'MttoCuentaPorCobrar.CuentaAmortizacionQueryList'],

    refs: [
    	{
            ref: 'CuentaAmortizacionQueryPanel',
            selector: 'panel'
        },
        {
            ref: 'CuentaAmortizacionQueryList',
            selector: 'CuentaAmortizacionQueryList'
        }
    ],

    init: function() {
        this.control({
            'CuentaAmortizacionQueryList dataview': {
                itemdblclick: this.editRecord
            },
            'CuentaAmortizacionQueryList button[action=add]': {
            	click: this.editRecord
            },
            'CuentaAmortizacionQueryList button[action=delete]': {
                click: this.deleteRecord
            },
            'CuentaAmortizacionQueryEdit button[action=save]': {
                click: this.updateRecord
            }
        });
    },

    editRecord: function(grid, record) {
        var edit = Ext.create('MyApp.view.MttoCuentaPorCobrar.CuentaAmortizacionQueryEdit').show();
        if(record.data){
        	edit.down('form').loadRecord(record);
        	edit.setTitle('Editar');
        }else{
        	edit.setTitle('Agregar');
        }
    },
    
    updateRecord: function(button) {
    	
        var win = button.up('window');
        var form = win.down('form');
        var record = form.getRecord();
        var values = form.getValues();
        var store = Ext.getStore('MttoCuentaPorCobrar.CuentaAmortizacionQueryStore');
        
        
        if (form.isValid()) {
	        Ext.Msg.confirm('Confirmar','¿Estás seguro de GRABAR el registro?',function (btn) {
	            
	            if (btn == 'yes') {
                
                    if(win.title === 'Editar') {
                        record.set(values);
                    } else{
                        record = Ext.create('MyApp.model.MttoCuentaPorCobrar.CuentaAmortizacionQueryModel');
                        record.set(values);
                        store.add(record);
                    }

                    win.close();	
                    store.sync({
                        success: function (batch, eOpts) {
                            store.load({params: {id_cuenta_x_cobrar: null}});
                        }
                    });
	            }
	            
	     });
        
        }
    },
    deleteRecord: function(button) {
    	
    	var grid = this.getCuentaAmortizacionQueryList();
    	var record = grid.getSelectionModel().getSelection(); 
    	var store = Ext.getStore('MttoCuentaPorCobrar.CuentaAmortizacionQueryStore');
    	
    	if(record.length > 0){
	        Ext.Msg.confirm('Confirmar','¿Estás seguro de ELIMINAR el registro?',function (btn) {
	                if (btn == 'yes') {
	             	   store.remove(record);
						store.sync({
					        success: function (batch, eOpts) {
					            store.load({params: {id_cuenta_x_cobrar: null}});
					        }
					    });
	                }
	        });
    	}

    }
    
});