/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by MybatisModelGenerator v.3.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   10/03/2016 00:37:53
*/

Ext.define('MyApp.view.GestionarGuia.GuiaPesoQueryEdit', {
    extend: 'Ext.window.Window',
    alias : 'widget.GuiaPesoQueryEdit',

    requires: ['Ext.form.Panel'],

    layout: 'fit',
    autoShow: true,
    modal: true,
    floating: true,
    resizable: false,
    width: 355,
    
    iconCls:'icon-pencil',

    initComponent: function() {
        this.items = [
            {
                xtype: 'form',
                id: 'form_submodel_GuiaPesoQuery',
//                padding: '5 5 0 5',
                border: false,
                style: 'background-color: #fff;',
                
                tbar: [
						{
						    xtype: 'segmentedbutton',
						    items: [{
						        text: 'Bruto',
						        handler:function(){
						        	var form = Ext.getCmp('form_submodel_GuiaPesoQuery');
						    		var id_tipo_peso = form.getForm().findField('id_tipo_peso');
						    		id_tipo_peso.setValue(1);
						    		
						    		var num_jabas = form.getForm().findField('num_jabas');
						    		num_jabas.focus(false, 200);
						        }
						    }, {
						        text: 'Tara',
						        handler:function(){
						        	var form = Ext.getCmp('form_submodel_GuiaPesoQuery');
						    		var id_tipo_peso = form.getForm().findField('id_tipo_peso');
						    		id_tipo_peso.setValue(2);
						    		
						    		var num_jabas = form.getForm().findField('num_jabas');
						    		num_jabas.focus(false, 200);
						        }
						    }, {
						        text: 'Devolución',
						        handler:function(){
						        	var form = Ext.getCmp('form_submodel_GuiaPesoQuery');
						    		var id_tipo_peso = form.getForm().findField('id_tipo_peso');
						    		id_tipo_peso.setValue(3);
						    		
						    		var num_jabas = form.getForm().findField('num_jabas');
						    		num_jabas.focus(false, 200);
						        }
						    }]
						}
               ],
                
                fieldDefaults: {
                    anchor: '100%',
                    labelAlign: 'left',
                    allowBlank: false,
                    combineErrors: true,
                    msgTarget: 'qtip',
                    padding: '0 5 0 5',
                    labelWidth: 100
                },

                items: [
					{
					    readOnly : false,
						allowBlank : true,
						hidden : true,
						xtype : 'textfield',
						name : 'id_guia_peso',
						fieldLabel : 'id_guia_peso',
						disabled : false,
						editable : true
					}
					,{
					    readOnly : false,
						allowBlank : true,
						hidden : true,
						xtype : 'textfield',
						name : 'id_guia',
						fieldLabel : 'id_guia',
						disabled : false,
						editable : true
					}
					,{
					    readOnly : false,
						allowBlank : true,
						hidden : true,
						xtype : 'numberfield',
						name : 'num_anio',
						fieldLabel : 'Año',
						disabled : false,
						editable : true
					}
					,{
					    readOnly : false,
						allowBlank : true,
						hidden : true,
						xtype : 'numberfield',
						name : 'num_mes',
						fieldLabel : 'Mes',
						disabled : false,
						editable : true
					}
					,{
					    readOnly : false,
						allowBlank : true,
						hidden : true,
						xtype : 'numberfield',
						name : 'num_dia',
						fieldLabel : 'Dia',
						disabled : false,
						editable : true
					}
					,{
						padding: "5 5 0 5",  // Same as CSS ordering (top, right, bottom, left)
					    readOnly : false,
						store : {
								fields: ['valor_item','descrip_item'],
								proxy: {
							         type: 'ajax',
							         url: '/SeguridadWSRestApp/api/catalogo/buscarPorNombre?nombre_catalogo=tipo_peso_guia',
							         reader: {
							             type: 'json',
							             rootProperty: 'list'
							         }
						    	},
								autoLoad: true
					    },
					    listeners: {
					        'change': function(field, newValue, oldValue) {
					        	
					        	var form = Ext.getCmp('form_submodel_GuiaPesoQuery');
					    		var flag_devolucion = form.getForm().findField('flag_devolucion');
					    		var num_aves = form.getForm().findField('num_aves');
					    		var num_jabas = form.getForm().findField('num_jabas');
					    		
					    		//Bruto
					    		if(newValue == 1){
					    			
					    			flag_devolucion.setHidden(false);
					    			flag_devolucion.allowBlank = false;
					    			
					    			num_aves.setHidden(false);
					    			num_aves.allowBlank = true;
					    			
					    			num_jabas.setHidden(false);
					    			num_jabas.allowBlank = false;
					    			
					    		}
					    		
					    		//Tara
					    		if(newValue == 2){
					    			
					    			flag_devolucion.setHidden(true);
					    			flag_devolucion.allowBlank = true;
					    			
					    			num_aves.setHidden(true);
					    			num_aves.allowBlank = true;
					    			
					    			num_jabas.setHidden(false);
					    			num_jabas.allowBlank = false;
					    			
					    		}
					    		
					    		//Devo
					    		if(newValue == 3){
					    			flag_devolucion.setHidden(true);
					    			flag_devolucion.allowBlank = true;
					    			
					    			num_aves.setHidden(false);
					    			num_aves.allowBlank = true;
					    			
					    			num_jabas.setHidden(true);
					    			num_jabas.allowBlank = true;
					    		}
					    		
					        }
					    },
						queryMode : 'local',
						displayField : 'descrip_item',
						hidden : false,
						xtype : 'combobox',
						name : 'id_tipo_peso',
						valueField : 'valor_item',
						emptyText : '-- Seleccione Opción --',
						fieldLabel : 'Tipo Peso',
						disabled : false,
						editable : true
					}
					,{
					    readOnly : false,
						allowBlank : true,
						hidden : false,
						xtype : 'numberfield',
						name : 'num_jabas',
						fieldLabel : 'Nro. Jabas',
						disabled : false,
						editable : true
					}
					,{
					    readOnly : false,
						allowBlank : true,
						hidden : false,
						xtype : 'numberfield',
						name : 'num_aves',
						fieldLabel : 'Nro. Aves',
						disabled : false,
						editable : true
					}
					,{
					    readOnly : false,
						hidden : false,
						xtype : 'textfield',
						name : 'peso_obtenido',
						fieldLabel : 'Peso',
						vtype : 'soloNumeroDecimales',
						disabled : false,
						editable : true
					}
					,{
					    readOnly : false,
						store : {
								fields: ['valor_item','descrip_item'],
								data:[
								      {
								    	  valor_item: 2,
								    	  descrip_item:'No'
								      },
								      {
								    	  valor_item: 1,
								    	  descrip_item:'Si'
								      }
								     ]
					    },
						queryMode : 'local',
						displayField : 'descrip_item',
						hidden : false,
						xtype : 'combobox',
						name : 'flag_devolucion',
						valueField : 'valor_item',
						fieldLabel : 'Devolución?',
						value:2,
						disabled : false,
						editable : false,
						allowBlank : true
					}
					,{
					    readOnly : false,
						store : {
								fields: ['valor_item','descrip_item'],
								proxy: {
							         type: 'ajax',
							         url: '/SeguridadWSRestApp/api/catalogo/buscarPorNombre?nombre_catalogo=estado_generico',
							         reader: {
							             type: 'json',
							             rootProperty: 'list'
							         }
						    	},
								autoLoad: true
					    },
						queryMode : 'local',
						displayField : 'descrip_item',
						hidden : false,
						xtype : 'combobox',
						name : 'id_estado',
						valueField : 'valor_item',
						emptyText : '-- Seleccione Opción --',
						fieldLabel : 'Estado',
						disabled : false,
						editable : false
					}
                ]
            }
        ];
        
        this.dockedItems = [{
            xtype: 'toolbar',
            dock: 'bottom',
            //id:'buttons_GuiaPesoQuery',
            ui: 'footer',
            items: ['->', {
            	iconCls:'icon-disk_black',
                id: 'save',
                text: 'Grabar',
                action: 'save'
            },{
            	iconCls:'icon-cross',
                text: 'Cancelar',
                scope: this,
                handler: this.close
            }]
        }];

        this.callParent(arguments);
    },
    listeners : {
        afterrender : function(cmp) {
           // map one key by key code
           var map = new Ext.util.KeyMap({
               target: cmp.el,
               key: 'g', // or Ext.event.Event.ENTER
               ctrl:true,
               fn: function(){
            	   var button = Ext.getCmp('save');
            	   button.fireEvent('click', button);
               },
               scope: this
           });
        }
      }
});
