/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by MybatisModelGenerator v.3.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   13/03/2016 16:05:57
*/

Ext.define('MyApp.controller.GestionarGuiaCompra.GuiaPesoCompraQueryController', {
    extend: 'Ext.app.Controller',
    
    stores: ['GestionarGuiaCompra.GuiaPesoCompraQueryStore'],

    models: ['GestionarGuiaCompra.GuiaPesoCompraQueryModel'],

    views: ['GestionarGuiaCompra.GuiaPesoCompraQueryEdit', 'GestionarGuiaCompra.GuiaPesoCompraQueryList'],

    refs: [
    	{
            ref: 'GuiaPesoCompraQueryPanel',
            selector: 'panel'
        },
        {
            ref: 'GuiaPesoCompraQueryList',
            selector: 'GuiaPesoCompraQueryList'
        }
    ],
    
    init: function() {
        this.control({
            'GuiaPesoCompraQueryList dataview': {
                itemdblclick: this.editRecord
            },
            'GuiaPesoCompraQueryList button[action=add]': {
            	click: this.editRecord
            },
            'GuiaPesoCompraQueryList button[action=delete]': {
                click: this.deleteRecord
            },
            'GuiaPesoCompraQueryEdit button[action=save]': {
                click: this.updateRecord
            }
        });
        

        
    },

    editRecord: function(grid, record) {
        var edit = Ext.create('MyApp.view.GestionarGuiaCompra.GuiaPesoCompraQueryEdit').show();
        var form = edit.down('form');
        if(record.data){
        	edit.down('form').loadRecord(record);
        	edit.setTitle('Editar');
        }else{
        	edit.setTitle('Agregar');
        	
          	var id_estado = form.getForm().findField('id_estado');
          	id_estado.setReadOnly(true);
          	id_estado.setValue(1);
        }
    },
    
    updateRecord: function(button) {
    	
        var win = button.up('window');
        var form = win.down('form');
        var record = form.getRecord();
        var values = form.getValues();
        var store = Ext.getStore('GestionarGuiaCompra.GuiaPesoCompraQueryStore');
        
        var id_tipo_peso = form.getForm().findField('id_tipo_peso');
        values.descrip_tipo_peso = id_tipo_peso.getRawValue();
        
        var me = this;
        
        if (form.isValid()) {
//	        Ext.Msg.confirm('Confirmar','¿Estás seguro de GRABAR el registro?',function (btn) {
	            
//	            if (btn == 'yes') {
                
                    if(win.title === 'Editar') {
                        record.set(values);
                    } else{
                        record = Ext.create('MyApp.model.GestionarGuiaCompra.GuiaPesoCompraQueryModel');
                        record.set(values);
                        store.add(record);
                    }

                    store.sync({
                        success: function (batch, eOpts) {
                            store.load({params: {id_guia: null}});
							//Obtenemos Totales
				        	me.setGuiaTotales();
//				        	win.close();	
				        	var form = Ext.getCmp('form_submodel_GuiaPesoQuery');
				    		
				    		var num_jabas = form.getForm().findField('num_jabas');
				    		var num_aves = form.getForm().findField('num_aves');
				    		var peso_obtenido = form.getForm().findField('peso_obtenido');
				    		
				    		num_jabas.setValue('');
				    		num_aves.setValue('');
				    		peso_obtenido.setValue('');
				    		
				    		num_jabas.focus(false, 200);
				    		
                        }
                    });
//	            }
	            
//	     });
        
        }
    },
    deleteRecord: function(button) {
    	
    	var grid = this.getGuiaPesoCompraQueryList();
    	var record = grid.getSelectionModel().getSelection(); 
    	var store = Ext.getStore('GestionarGuiaCompra.GuiaPesoCompraQueryStore');
    	
    	var me = this;
    	
    	if(record.length > 0){
	        Ext.Msg.confirm('Confirmar','¿Estás seguro de ELIMINAR el registro?',function (btn) {
	                if (btn == 'yes') {
	             	   store.remove(record);
						store.sync({
					        success: function (batch, eOpts) {
					            store.load({params: {id_guia: null}});
								//Obtenemos Totales
					        	me.setGuiaTotales();
					        }
					    });
	                }
	        });
    	}

    },
    setGuiaTotales: function() {
    	Ext.Ajax.request({
            method: 'GET',
            url: '/InaviWSRestApp/api/GestionarGuiaCompra/guiaTotales',
            success: function( result, request ){
            	
            	var json = Ext.JSON.decode(result.responseText);
            	var formTotales = Ext.getCmp('form_totales');
            	
            	total_peso_bruto = formTotales.getForm().findField('total_peso_bruto');
            	total_peso_tara = formTotales.getForm().findField('total_peso_tara');
            	total_peso_devolucion = formTotales.getForm().findField('total_peso_devolucion');
            	total_peso_tara_devo = formTotales.getForm().findField('total_peso_tara_devo');
            	total_peso_neto = formTotales.getForm().findField('total_peso_neto');
            	taraCompleta = formTotales.getForm().findField('taraCompleta');

            	total_peso_bruto.setValue(json.record.total_peso_bruto);
            	total_peso_tara.setValue(json.record.total_peso_tara);
            	total_peso_devolucion.setValue(json.record.total_peso_devolucion);
            	total_peso_tara_devo.setValue(json.record.total_peso_tara_devo);
            	total_peso_neto.setValue(json.record.total_peso_neto);
            	taraCompleta.setValue(json.record.taraCompleta);
            }
        });
    }
    
});