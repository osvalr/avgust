/*
* Copyright «©» 2016, J.R Totem. All rights reserved.
*
* This file was generated by MybatisModelGenerator v.3.0.
* All changes made in this file will be lost if you recompile the source schema.
*
* [GeneratorCrud v.1.0] by JRaffo 
*/

/**
* @author  Javier Raffo
* @version 1.0
* @since   01/03/2016 22:42:35
*/

package pe.com.acme.inavi.business.implement;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import pe.com.acme.util.DtoUtil;
import pe.com.acme.util.MybatisRepositoryHelper;

import pe.com.acme.inavi.business.service.GestionarClienteJuridicoService;
import pe.com.acme.inavi.business.util.InaviConstantes;
import pe.com.acme.query.mybatis.model.ClienteJuridicoQuery;
import pe.com.acme.query.mybatis.model.ClienteJuridicoQueryCriteria;
import pe.com.acme.query.mybatis.mapper.ClienteJuridicoQueryMapper;

import pe.com.acme.domain.mybatis.model.Persona;
import pe.com.acme.domain.mybatis.model.PersonaTipo;
import pe.com.acme.domain.mybatis.model.PersonaTipoExample;
import pe.com.acme.domain.mybatis.model.PersonaTipoKey;
import pe.com.acme.domain.mybatis.mapper.PersonaMapper;
import pe.com.acme.domain.mybatis.mapper.PersonaTipoMapper;

@Service
public class GestionarClienteJuridicoServiceImpl extends MybatisRepositoryHelper implements GestionarClienteJuridicoService {

	@Autowired
	InaviCommonServiceImpl inaviCommonServiceImpl;
	
	@Autowired
	private DtoUtil dtoUtil;
	
	@Autowired
	private PersonaTipoMapper personaTipoMapper;
	
	@Transactional(rollbackForClassName = {"Exception"})
	@Override
	public Integer create(ClienteJuridicoQuery model) throws Exception {
	
		Integer lastId = null;

		Persona persona = dtoUtil.copyBean(model, Persona.class);
		persona.setId_tipo_doc(InaviConstantes.TIPO_DOC_IDENTIDAD_RUC);
		
		if(inaviCommonServiceImpl.buscarPersonaPorRazonSocial(persona.getRazon_social(), null) != null){
			throw new Exception("El nombre de razón social: " + persona.getRazon_social() + " ya existe.");
		}
		
		if(inaviCommonServiceImpl.buscarPersonaPorTipoNumDoc(persona.getId_tipo_doc(),persona.getNum_tipo_doc(), null) != null){
			throw new Exception("El número de Ruc: " +  persona.getNum_tipo_doc()+ " ya existe.");
		}
		
		this.insertSelective(PersonaMapper.class, persona);

		PersonaTipo personaTipo = new PersonaTipo();
		personaTipo.setId_persona(persona.getId_persona());
		personaTipo.setId_tipo_persona(InaviConstantes.TIPO_PERSONA_JURIDICA);
		personaTipo.setId_sub_tipo_persona(InaviConstantes.SUB_TIPO_PERSONA_CLIENTE);
		
		this.insertSelective(PersonaTipoMapper.class, personaTipo);
		
		lastId = persona.getId_persona();
		return lastId;
	}
	
	@Transactional(rollbackForClassName = {"Exception"})
	@Override
	public void update(ClienteJuridicoQuery model) throws Exception {

		Persona persona = dtoUtil.copyBean(model, Persona.class);
		persona.setId_tipo_doc(InaviConstantes.TIPO_DOC_IDENTIDAD_RUC);
		
		if(inaviCommonServiceImpl.buscarPersonaPorRazonSocial(persona.getRazon_social(), persona.getId_persona()) != null){
			throw new Exception("El nombre de razón social: " + persona.getRazon_social() + " ya existe.");
		}
		
		if(inaviCommonServiceImpl.buscarPersonaPorTipoNumDoc(persona.getId_tipo_doc(),persona.getNum_tipo_doc(), persona.getId_persona()) != null){
			throw new Exception("El número de Ruc: " +  persona.getNum_tipo_doc()+ " ya existe.");
		}
		
		PersonaTipoKey personaTipoKey = new PersonaTipoKey();
		personaTipoKey.setId_persona(persona.getId_persona());
		personaTipoKey.setId_tipo_persona(InaviConstantes.TIPO_PERSONA_JURIDICA);
		personaTipoKey.setId_sub_tipo_persona(InaviConstantes.SUB_TIPO_PERSONA_CLIENTE);
		
		PersonaTipo personaTipo = this.selectByPrimaryKey(PersonaTipoMapper.class, personaTipoKey);
		
		if(persona.getId_estado().intValue() != personaTipo.getId_estado().intValue()){
			
			int id_estado = persona.getId_estado().intValue();
			persona.setId_estado(InaviConstantes.ESTADO_GENERICO_ACTIVO);
			
			PersonaTipoExample example = new PersonaTipoExample();
			example.createCriteria()
			.andId_personaEqualTo(model.getId_persona())
			.andId_tipo_personaEqualTo(InaviConstantes.TIPO_PERSONA_JURIDICA)
			.andId_sub_tipo_personaEqualTo(InaviConstantes.SUB_TIPO_PERSONA_CLIENTE);
			
			personaTipo.setId_estado(id_estado);
			
			personaTipoMapper.updateByExample(personaTipo, example);
			
		}
		
		this.updateByPrimaryKeySelective(PersonaMapper.class, persona);
		
	}

	@Transactional(rollbackForClassName = {"Exception"})
	@Override
	public void destroy(ClienteJuridicoQuery model) throws Exception {

		PersonaTipoExample example = new PersonaTipoExample();
		example.createCriteria()
		.andId_personaEqualTo(model.getId_persona())
		.andId_tipo_personaEqualTo(InaviConstantes.TIPO_PERSONA_JURIDICA)
		.andId_sub_tipo_personaEqualTo(InaviConstantes.SUB_TIPO_PERSONA_CLIENTE);
		
		personaTipoMapper.deleteByExample(example);
		
		Persona persona = dtoUtil.copyBean(model, Persona.class);
		this.deleteByPrimaryKey(PersonaMapper.class, persona);
	}

	@Transactional(rollbackForClassName = {"Exception"})
	@Override
	public List<ClienteJuridicoQuery> list(ClienteJuridicoQueryCriteria criteria) throws Exception {
		List<ClienteJuridicoQuery> list = this.selectByQuery(ClienteJuridicoQueryMapper.class, criteria, criteria.getStart(), criteria.getLimit());
		return list;
	}

	@Transactional(rollbackForClassName = {"Exception"})
	@Override
	public int countRecords(ClienteJuridicoQueryCriteria criteria) throws Exception {
		int count = this.selectCountByQuery(ClienteJuridicoQueryMapper.class, criteria);
		return count;
	}
}
