<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="sernanp.app.dao.query.mapper.GestionarNominaQueryMapper"> 

<sql id="outs"> 
<![CDATA[


napp.srl_id_nomina_anio_periodo_personal,
ap.srl_id_anio_planilla,
ap.int_anio,
app.srl_id_anio_periodo_planilla,
app.int_id_periodo_mes,
ms.destablatipo as descrip_periodo,
pn.idpersonanatural,
ps.idpersonal,
(COALESCE(pn.apepat,'')||' '||COALESCE(pn.apemat,'')||' '||COALESCE(pn.nombre,''))as"nombre_completo",
pn.nombre,
pn.apepat,
pn.apemat,
pn.idtipodocumento,
td.abrtablatipo as "descrip_documento",
pn.numerodoc,
pn.ruc,
napp.srl_id_regimen_contractual,
rc.var_descripcion_regimen_contractual,
c.srl_id_cargo,
c.var_nom_cargo,
napp.c_fte_fto,

napp.c_meta,
napp.dec_total_ingresos,
napp.dec_total_descuentos,
napp.dec_total_aportes,
napp.dec_total_neto,
napp.int_id_estado,
eg.var_nombre_estado as descrip_estado,
to_char(napp.tsp_fecha_registro, 'DD/MM/YYYY') as tsp_fecha_registro


]]>
</sql> 

<sql id="from"> 
<![CDATA[


personal.t_nomina_anio_periodo_personal napp
inner join personal.t_anio_periodo_planilla app on napp.srl_id_anio_periodo_planilla = app.srl_id_anio_periodo_planilla
inner join personal.t_anio_planilla ap on app.srl_id_anio_planilla = ap.srl_id_anio_planilla
inner join sernanp.vw_meses ms on ms.codinttablatipo = app.int_id_periodo_mes
inner join sernanp.vw_estado_nomina eg on eg.var_cod_estado = napp.int_id_estado
inner join sernanp.t_regimen_contractual rc on napp.srl_id_regimen_contractual=rc.srl_id_regimen_contractual

inner join sernanp.personal ps on napp.idpersonal = ps.idpersonal
inner join sernanp.personanatural pn on ps.idpersonanatural=pn.idpersonanatural
inner join sernanp.vw_tipo_documento td on pn.idtipodocumento=td.idtablatipo

left join personal.t_anio_meta am on napp.c_meta = am.cod_meta and ap.srl_id_anio_planilla = am.srl_id_anio_planilla

left join sernanp.t_personal_contrato pc on napp.srl_id_contrato=pc.srl_id_contrato
left join sernanp.t_cargo c on pc.srl_id_cargo=c.srl_id_cargo



]]>
</sql> 

<sql id="inputs"> 
<![CDATA[

napp.srl_id_nomina_anio_periodo_personal = coalesce(#{srl_id_nomina_anio_periodo_personal},napp.srl_id_nomina_anio_periodo_personal) and 
UPPER(COALESCE(COALESCE(pn.nombre,'') ||' '|| COALESCE(pn.apepat,'') ||' '|| COALESCE(pn.apemat,''),'')) like UPPER(COALESCE('%'|| #{nombres_completos} ||'%',UPPER(COALESCE(COALESCE(pn.nombre,'')||' '||COALESCE(pn.apepat,'')||' '|| COALESCE(pn.apemat,''),'')))) and
COALESCE(pn.idtipodocumento,0)=COALESCE(#{idtipodocumento},COALESCE(pn.idtipodocumento,0)) and
COALESCE(pn.numerodoc,'')like COALESCE('%'|| #{numerodoc} ||'%',COALESCE(pn.numerodoc,'')) and
COALESCE(pn.ruc,'')like COALESCE('%'|| #{ruc} ||'%',COALESCE(pn.ruc,'')) and
COALESCE(napp.srl_id_regimen_contractual,0)=COALESCE(#{srl_id_regimen_contractual},COALESCE(napp.srl_id_regimen_contractual,0)) and
COALESCE(c.srl_id_cargo,0)=COALESCE(#{srl_id_cargo},COALESCE(c.srl_id_cargo,0)) and
COALESCE(napp.c_fte_fto,'')=COALESCE(#{c_fte_fto},COALESCE(napp.c_fte_fto,'')) and
ap.int_anio = COALESCE(#{int_anio},ap.int_anio) and
app.int_id_periodo_mes = COALESCE(#{int_id_periodo_mes},app.int_id_periodo_mes) and
napp.int_id_estado = COALESCE(#{int_id_estado},napp.int_id_estado) 

]]>
</sql> 

<sql id="order"> 
<![CDATA[
ORDER BY ${orderColumn} ${orderDirecction}
]]>
</sql> 

<select id="getListQueryByCriteria" resultType="sernanp.app.dao.query.domain.GestionarNominaQuery" parameterType="sernanp.app.dao.query.domain.GestionarNominaQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="sernanp.app.dao.query.domain.GestionarNominaQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="sernanp.app.dao.query.domain.GestionarNominaQuery" parameterType="sernanp.app.dao.query.domain.GestionarNominaQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="sernanp.app.dao.query.domain.GestionarNominaQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="sernanp.app.dao.query.domain.GestionarNominaQueryCriteria"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
