<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="sernanp.app.dao.query.mapper.GestionarConvocatoriaPersonalQueryMapper"> 

<sql id="outs"> 
<![CDATA[
 
c.srl_id_convocatoria,
  c.var_num_convocatoria,
(select a[2] || '-' || a[3] || coalesce(' - L' || to_char(c.int_num_activacion,'9'),'') 
	from (select regexp_split_to_array(c.var_num_convocatoria, '-')) as dt(a)
) as "var_num_convocatoria_corto",
  TO_CHAR(c.dte_fecha_aprobacion,'DD/MM/YYYY') as "dte_fecha_aprobacion",
  TO_CHAR(c.dte_fecha_inicio_publicacion,'DD/MM/YYYY') as "dte_fecha_inicio_publicacion",
  TO_CHAR(c.dte_fecha_termino_publicacion,'DD/MM/YYYY') as "dte_fecha_termino_publicacion",
  c.int_num_activacion,
  c.int_id_estado,
  det.var_nombre_estado as "descrip_estado",
  TO_CHAR(c.tsp_fecha_registro,'DD/MM/YYYY') as "tsp_fecha_registro"

]]>
</sql> 

<sql id="from"> 
<![CDATA[

  sernanp.t_convocatoria c
LEFT JOIN sernanp.t_detalle_estado_tabla det ON c.int_id_estado = cast(det.var_cod_estado as integer) and det.srl_id_estado_tabla = 1 

]]>
</sql> 

<sql id="inputs"> 
<![CDATA[

  c.var_num_convocatoria = COALESCE(#{var_num_convocatoria},c.var_num_convocatoria) AND
  COALESCE(c.int_num_activacion,0) = COALESCE(#{int_num_activacion},COALESCE(c.int_num_activacion,0)) AND
  COALESCE(c.int_id_estado,0) = COALESCE(#{int_id_estado},COALESCE(c.int_id_estado,0))
  
]]>
</sql> 

<sql id="order"> 
<![CDATA[
ORDER BY ${orderColumn} ${orderDirecction}
]]>
</sql> 

<select id="getListQueryByCriteria" resultType="sernanp.app.dao.query.domain.GestionarConvocatoriaPersonalQuery" parameterType="sernanp.app.dao.query.domain.GestionarConvocatoriaPersonalQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="sernanp.app.dao.query.domain.GestionarConvocatoriaPersonalQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="sernanp.app.dao.query.domain.GestionarConvocatoriaPersonalQuery" parameterType="sernanp.app.dao.query.domain.GestionarConvocatoriaPersonalQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="sernanp.app.dao.query.domain.GestionarConvocatoriaPersonalQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="sernanp.app.dao.query.domain.GestionarConvocatoriaPersonalQueryCriteria"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
