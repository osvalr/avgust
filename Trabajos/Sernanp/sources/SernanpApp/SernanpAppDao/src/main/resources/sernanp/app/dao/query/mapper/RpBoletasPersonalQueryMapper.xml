<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="sernanp.app.dao.query.mapper.RpBoletasPersonalQueryMapper"> 

<sql id="outs"> 
<![CDATA[

	ps.idpersonal,
	ap.int_anio,
	ms.destablatipo as descrip_periodo,
	(COALESCE(pn.apepat,'')||' '||COALESCE(pn.apemat,'')||' '||COALESCE(pn.nombre,'')) as "nombre_completo",
	pn.numerodoc,
	/*(COALESCE(rp.var_descripcion_regimen_pensionario,'') || ' ' || COALESCE(af.var_nombre_afp,'')) as regimen_pensionario,
        (CASE WHEN ca.siglascategoriaanp = 'SC'
	           THEN ca.descategoriaanp
	      ELSE (COALESCE(ca.siglascategoriaanp,'')|| ' ' || COALESCE(an.desareanatural,''))
	 END) as "ubicacion",*/
	ps.var_codigo_afiliacion,
        napp.srl_id_regimen_contractual,
	rc.var_descripcion_regimen_contractual,
	to_char(pc.dte_fec_inicio,'DD/MM/YYYY')as inicio_contrato,
	app.int_id_periodo_mes,
	c.var_nom_cargo,
	napp.c_meta,
	napp.c_fte_fto,
	napp.srl_id_nomina_anio_periodo_personal,
	napp.dec_total_ingresos,
	napp.dec_total_descuentos,
	napp.dec_total_aportes,
	napp.dec_total_neto


]]>
</sql> 

<sql id="from"> 
<![CDATA[


	personal.t_nomina_anio_periodo_personal napp
	inner join personal.t_anio_periodo_planilla app on napp.srl_id_anio_periodo_planilla = app.srl_id_anio_periodo_planilla
	inner join personal.t_anio_planilla ap on app.srl_id_anio_planilla = ap.srl_id_anio_planilla
	inner join sernanp.personal ps on napp.idpersonal = ps.idpersonal
	inner join sernanp.personanatural pn on ps.idpersonanatural=pn.idpersonanatural
	inner join sernanp.t_regimen_contractual rc on napp.srl_id_regimen_contractual=rc.srl_id_regimen_contractual
	inner join sernanp.vw_meses ms on ms.codinttablatipo = app.int_id_periodo_mes
	left join sernanp.t_personal_contrato pc on napp.srl_id_contrato = pc.srl_id_contrato
	--left join sernanp.t_personal_contrato ad on pc.srl_id_contrato = ad.srl_id_contrato_padre 
	LEFT JOIN sernanp.t_cargo c ON pc.srl_id_cargo = c.srl_id_cargo
	left join mpp.t_fuente_financiamiento ff on napp.c_fte_fto = ff.var_rubro_fte_fto
	LEFT JOIN sernanp.t_regimen_pensionario rp on ps.srl_id_regimen_pensionario = rp.srl_id_regimen_pensionario
    LEFT JOIN personal.t_afp af on ps.srl_id_afp = af.srl_id_afp
	


]]>
</sql> 

<sql id="inputs"> 
<![CDATA[


UPPER(COALESCE(COALESCE(pn.nombre,'') ||' '|| COALESCE(pn.apepat,'') ||' '|| COALESCE(pn.apemat,''),'')) like UPPER(COALESCE('%'|| #{nombre_completo} ||'%',UPPER(COALESCE(COALESCE(pn.nombre,'')||' '||COALESCE(pn.apepat,'')||' '|| COALESCE(pn.apemat,''),'')))) AND
COALESCE(napp.srl_id_regimen_contractual,0)=COALESCE(#{srl_id_regimen_contractual},COALESCE(napp.srl_id_regimen_contractual,0)) and
COALESCE(ff.srl_id_fuente_financiamiento,0) = COALESCE(#{srl_id_fuente_financiamiento},ff.srl_id_fuente_financiamiento) AND
ap.int_anio = COALESCE(#{int_anio},ap.int_anio) and
app.int_id_periodo_mes = COALESCE(#{int_id_periodo_mes},app.int_id_periodo_mes) and
napp.int_id_estado = COALESCE(#{int_id_estado},napp.int_id_estado) 

]]>
</sql> 

<sql id="order"> 
<![CDATA[

ORDER BY ${orderColumn} ${orderDirecction}
]]>
</sql> 

<select id="getListQueryByCriteria" resultType="sernanp.app.dao.query.domain.RpBoletasPersonalQuery" parameterType="sernanp.app.dao.query.domain.RpBoletasPersonalQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="sernanp.app.dao.query.domain.RpBoletasPersonalQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="sernanp.app.dao.query.domain.RpBoletasPersonalQuery" parameterType="sernanp.app.dao.query.domain.RpBoletasPersonalQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="sernanp.app.dao.query.domain.RpBoletasPersonalQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="sernanp.app.dao.query.domain.RpBoletasPersonalQueryCriteria"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
