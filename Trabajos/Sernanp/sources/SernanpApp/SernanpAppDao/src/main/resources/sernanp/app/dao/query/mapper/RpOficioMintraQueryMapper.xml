<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="sernanp.app.dao.query.mapper.RpOficioMintraQueryMapper"> 

<sql id="outs"> 
<![CDATA[
 	rp.srl_id_requerimiento_personal,
	rp.int_cantidad_requerida,
	initcap(rp.var_denominacion_requerimiento) as var_denominacion_requerimiento,
	--'<li>'||initcap(rp.var_denominacion_requerimiento)||'</li>' as var_denominacion_requerimiento,
	rp.idarea_solicitante,
	--ao.desarea,
	CASE WHEN ao.idtipoarea = 6 THEN
		'Jefatura de ' || initcap(canp.descategoriaanp) || ' ' || an.desareanatural
	ELSE
		CASE WHEN uo.nomunidad ISNULL THEN
			ao.desarea
		ELSE
			ao.desarea || ' - ' || COALESCE(initcap(uo.nomunidad), '')
		END
	END as "desarea",
	rp.idunidad_solicitante,
	uo.nomunidad,
	rp.int_id_estado,
	erp.var_nombre_estado,
	to_char(rp.tsp_fecha_registro,'DD/MM/YYYY') as tsp_fecha_registro	
	,(SELECT var_nombre_anio FROM personal.t_anio_planilla WHERE int_anio = EXTRACT(YEAR FROM NOW())) AS  var_nombre_anio		
	,(
		SELECT 		
		(select a[2] || '-' || a[3] from (select regexp_split_to_array(cx.var_num_convocatoria, '-')) as dt(a))		
		FROM sernanp.t_convocatoria_area_org caox 
		LEFT JOIN sernanp.t_convocatoria cx ON cx.srl_id_convocatoria = caox.srl_id_convocatoria
		WHERE (caox.srl_id_convocatoria NOT IN (c.srl_id_convocatoria) 
		--AND caox.int_id_estado = 2
		)		
		AND caox.srl_id_requerimiento_personal = rp.srl_id_requerimiento_personal
		AND cx.int_num_activacion < c.int_num_activacion
		ORDER BY caox.srl_id_convocatoria DESC
		LIMIT 1
	)AS ultimo_lanzamiento
]]>
</sql> 

<sql id="from"> 
<![CDATA[
  personal.t_requerimiento_personal rp
    LEFT JOIN sernanp.t_convocatoria_area_org cao  			ON cao.srl_id_requerimiento_personal = rp.srl_id_requerimiento_personal
	LEFT JOIN sernanp.t_convocatoria c 						ON cao.srl_id_convocatoria = c.srl_id_convocatoria 
	LEFT JOIN sernanp.areaorganica ao 						ON rp.idarea_solicitante = ao.idarea
	LEFT JOIN sernanp.unidadoperativa uo 					ON rp.idunidad_solicitante = uo.idunidad
	LEFT JOIN sernanp.sede s								ON s.idsede = ao.idsede
	LEFT JOIN sernanp.areanatural an						ON an.idareanatural = s.idareanatural
	LEFT JOIN sernanp.categoriaanp canp						ON canp.idcategoriaanp = an.idcategoriaanp
	LEFT JOIN sernanp.vw_estado_requerimiento_personal erp 	ON rp.int_id_estado = to_number(erp.var_cod_estado,'99')
	

]]>
</sql> 

<sql id="inputs"> 
<![CDATA[
 coalesce(rp.int_id_estado,0) = coalesce(#{int_id_estado},coalesce(rp.int_id_estado,0)) and
	rp.var_denominacion_requerimiento ilike coalesce(#{var_denominacion_requerimiento}, rp.var_denominacion_requerimiento)and
	coalesce(rp.idarea_solicitante,0) = coalesce(#{idarea_solicitante},coalesce(rp.idarea_solicitante,0))
	AND c.srl_id_convocatoria = COALESCE(#{srl_id_convocatoria}, c.srl_id_convocatoria)
]]>
</sql> 

<sql id="order"> 
<![CDATA[
ORDER BY rp.srl_id_requerimiento_personal
]]>
</sql> 

<select id="getListQueryByCriteria" resultType="sernanp.app.dao.query.domain.RpOficioMintraQuery" parameterType="sernanp.app.dao.query.domain.RpOficioMintraQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="sernanp.app.dao.query.domain.RpOficioMintraQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="sernanp.app.dao.query.domain.RpOficioMintraQuery" parameterType="sernanp.app.dao.query.domain.RpOficioMintraQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="sernanp.app.dao.query.domain.RpOficioMintraQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="sernanp.app.dao.query.domain.RpOficioMintraQueryCriteria"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
