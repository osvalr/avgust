<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="sernanp.app.dao.query.mapper.GestionarNotasPostulanteQueryMapper"> 

<sql id="outs"> 
<![CDATA[


cfe.srl_conv_area_org_factor_eval,
cfe.srl_id_postulante_conv_area_org,

fe.int_id_tipo_factor_padre,
tfep.destablatipo as descrip_factor_evaluacion_padre,

cfe.srl_id_factor_evaluacion,
fe.int_id_tipo_factor,
tfe.destablatipo as descrip_facto_evaluacion,

cfe.int_id_estado_asistencia,
tea.destablatipo as descrip_estado_asistencia,
cfe.dec_puntaje_obtenido,
cfe.dec_puntaje_calculado,
cfe.int_id_estado_clasificacion,
tec.destablatipo as descrip_estado_clasificacion,
cfe.int_id_estado,
eg.destablatipo as descrip_estado,
to_char(cfe.tsp_fecha_registro,'dd/mm/yyyy') as tsp_fecha_registro


]]>
</sql> 

<sql id="from"> 
<![CDATA[


personal.t_conv_area_org_factor_eval cfe
left join sernanp.vw_tipo_estado_asistencia tea on cfe.int_id_estado_asistencia = tea.codinttablatipo
left join sernanp.vw_tipo_estado_clasificacion tec on cfe.int_id_estado_clasificacion = tec.codinttablatipo
left join sernanp.vw_estado_generico eg on cfe.int_id_estado = eg.codinttablatipo
left join personal.t_factor_evaluacion fe on cfe.srl_id_factor_evaluacion = fe.srl_id_factor_evaluacion
left join sernanp.vw_tipo_factor_evaluacion tfe on fe.int_id_tipo_factor = tfe.codinttablatipo
left join sernanp.vw_tipo_factor_evaluacion tfep on fe.int_id_tipo_factor_padre = tfep.codinttablatipo


]]>
</sql> 

<sql id="inputs"> 
<![CDATA[


cfe.srl_conv_area_org_factor_eval = coalesce(#{srl_conv_area_org_factor_eval},cfe.srl_conv_area_org_factor_eval) and 
cfe.srl_id_postulante_conv_area_org = coalesce(#{srl_id_postulante_conv_area_org},cfe.srl_id_postulante_conv_area_org)
]]>
</sql> 

<sql id="order"> 
<![CDATA[
ORDER BY ${orderColumn} ${orderDirecction}
]]>
</sql> 

<select id="getListQueryByCriteria" resultType="sernanp.app.dao.query.domain.GestionarNotasPostulanteQuery" parameterType="sernanp.app.dao.query.domain.GestionarNotasPostulanteQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="sernanp.app.dao.query.domain.GestionarNotasPostulanteQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="sernanp.app.dao.query.domain.GestionarNotasPostulanteQuery" parameterType="sernanp.app.dao.query.domain.GestionarNotasPostulanteQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="sernanp.app.dao.query.domain.GestionarNotasPostulanteQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="sernanp.app.dao.query.domain.GestionarNotasPostulanteQueryCriteria"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
