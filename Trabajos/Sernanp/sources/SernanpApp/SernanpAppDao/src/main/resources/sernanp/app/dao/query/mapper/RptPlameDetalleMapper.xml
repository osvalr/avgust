<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="sernanp.app.dao.query.mapper.RptPlameDetalleMapper"> 

<sql id="outs"> 
<![CDATA[
 

lpad(cast(x.idtipodocumento as varchar), 2, '0') idtipodocumento,
x.numerodoc,
x.c_fte_fto,
x.int_id_tipo_concepto,
x.var_cod_siaf_concepto,
x.var_descrip_concepto,
x.dec_monto_calculado
 

]]>
</sql> 

<sql id="from"> 
<![CDATA[
 

(
select

napp.srl_id_anio_periodo_planilla,
pc.srl_id_regimen_contractual,

pn.idtipodocumento,
pn.numerodoc,
napp.c_fte_fto,
cp.int_id_tipo_concepto,
cp.var_cod_siaf_concepto,
cp.var_descrip_concepto,
nc.dec_monto_calculado

from

personal.t_nomina_concepto nc
inner join personal.t_nomina_anio_periodo_personal napp on nc.srl_id_nomina_anio_periodo_personal = napp.srl_id_nomina_anio_periodo_personal
inner join personal.t_anio_periodo_planilla app on napp.srl_id_anio_periodo_planilla = app.srl_id_anio_periodo_planilla
inner join personal.t_anio_planilla ap on app.srl_id_anio_planilla = ap.srl_id_anio_planilla
inner join sernanp.t_personal_contrato pc on napp.srl_id_contrato = pc.srl_id_contrato
inner join sernanp.personal ps on pc.idpersonal = ps.idpersonal
inner join sernanp.personanatural pn on ps.idpersonanatural = pn.idpersonanatural
inner join personal.t_concepto_planilla cp on nc.srl_id_concepto_planilla = cp.srl_id_concepto_planilla

where
nc.int_id_estado IN (1, 3) and
nc.dec_monto_calculado > 0

union

select

napp.srl_id_anio_periodo_planilla,
pc.srl_id_regimen_contractual,

pn.idtipodocumento,
pn.numerodoc,
napp.c_fte_fto,
9 int_id_tipo_concepto,
'9999' var_cod_siaf_concepto,
'Neto a Pagar' var_descrip_concepto,
napp.dec_total_neto as dec_monto_calculado

from

personal.t_nomina_anio_periodo_personal napp
inner join personal.t_anio_periodo_planilla app on napp.srl_id_anio_periodo_planilla = app.srl_id_anio_periodo_planilla
inner join personal.t_anio_planilla ap on app.srl_id_anio_planilla = ap.srl_id_anio_planilla
inner join sernanp.t_personal_contrato pc on napp.srl_id_contrato = pc.srl_id_contrato
inner join sernanp.personal ps on pc.idpersonal = ps.idpersonal
inner join sernanp.personanatural pn on ps.idpersonanatural = pn.idpersonanatural
) x


]]>
</sql> 

<sql id="inputs"> 
<![CDATA[
 

x.srl_id_anio_periodo_planilla = coalesce(#{srl_id_anio_periodo_planilla},x.srl_id_anio_periodo_planilla) and
x.srl_id_regimen_contractual = coalesce(#{srl_id_regimen_contractual},x.srl_id_regimen_contractual) and
coalesce(x.c_fte_fto,'') = coalesce(#{c_fte_fto},coalesce(x.c_fte_fto,''))


]]>
</sql> 

<sql id="order"> 
<![CDATA[
order by 

x.numerodoc,
x.int_id_tipo_concepto,
x.var_cod_siaf_concepto
]]>
</sql> 

<select id="getListQueryByCriteria" resultType="sernanp.app.dao.query.domain.RptPlameDetalle" parameterType="sernanp.app.dao.query.domain.RptPlameDetalleCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="sernanp.app.dao.query.domain.RptPlameDetalle" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="sernanp.app.dao.query.domain.RptPlameDetalle" parameterType="sernanp.app.dao.query.domain.RptPlameDetalleCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="sernanp.app.dao.query.domain.RptPlameDetalle" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="sernanp.app.dao.query.domain.RptPlameDetalleCriteria"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
