<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="sernanp.app.dao.query.mapper.RpResumenPlanillaPagosQueryMapper"> 

<sql id="outs"> 
<![CDATA[
 
	napp.idpersonal,
	(COALESCE(pn.apepat,'')||' '||COALESCE(pn.apemat,'')||' '||COALESCE(pn.nombre,'')) as "nombre_completo",
	td.abrtablatipo as tipo_doc,
	pn.numerodoc,
	rc.var_descripcion_regimen_contractual,
	napp.dec_total_ingresos,
	napp.dec_total_descuentos,
	napp.dec_total_aportes,
	napp.dec_total_neto,
	mp.var_cod_meta_presupuestaria,
	ff.var_rubro_fte_fto,
	ap.int_anio,
	napp.srl_id_nomina_anio_periodo_personal

]]>
</sql> 

<sql id="from"> 
<![CDATA[
 
sernanp.persona p 
INNER JOIN sernanp.personanatural pn ON p.idpersona = pn.idpersona
INNER JOIN sernanp.personal ps ON ps.idpersonanatural = pn.idpersonanatural
INNER JOIN personal.t_nomina_anio_periodo_personal napp ON napp.idpersonal = ps.idpersonal
INNER JOIN personal.t_anio_periodo_planilla app ON napp.srl_id_anio_periodo_planilla = app.srl_id_anio_periodo_planilla
INNER JOIN personal.t_anio_planilla ap ON app.srl_id_anio_planilla = ap.srl_id_anio_planilla
left JOIN sernanp.t_personal_contrato pc ON napp.srl_id_contrato = pc.srl_id_contrato
LEFT JOIN sernanp.t_regimen_contractual rc ON ps.srl_id_regimen_contractual = rc.srl_id_regimen_contractual
LEFT JOIN mpp.t_meta_fuente_generica mfg ON pc.srl_id_meta_fuente_generica = mfg.srl_id_meta_fuente_generica
LEFT JOIN mpp.t_meta_presupuestaria mp ON mfg.srl_id_meta_presupuestaria = mp.srl_id_meta_presupuestaria
LEFT JOIN mpp.t_fuente_financiamiento ff ON mfg.srl_id_fuente_financiamiento = ff.srl_id_fuente_financiamiento
LEFT JOIN sernanp.vw_meses ms ON ms.codinttablatipo = app.int_id_periodo_mes
left join sernanp.vw_tipo_documento td on pn.idtipodocumento = td.ordtablatipo

]]>
</sql> 

<sql id="inputs"> 
<![CDATA[
 	
napp.srl_id_nomina_anio_periodo_personal = coalesce(NULL,napp.srl_id_nomina_anio_periodo_personal) and 
	UPPER(COALESCE(COALESCE(pn.nombre,'') ||' '|| COALESCE(pn.apepat,'') ||' '|| COALESCE(pn.apemat,''),'')) like UPPER(COALESCE('%'|| #{nombres_completos} ||'%',UPPER(COALESCE(COALESCE(pn.nombre,'')||' '||COALESCE(pn.apepat,'')||' '|| COALESCE(pn.apemat,''),'')))) AND
	pn.idtipodocumento=COALESCE(#{idtipodocumento},pn.idtipodocumento) and
	COALESCE(pn.numerodoc,'')like COALESCE('%'|| #{numerodoc} ||'%',COALESCE(pn.numerodoc,'')) and
	pc.srl_id_regimen_contractual= COALESCE(#{srl_id_regimen_contractual},pc.srl_id_regimen_contractual)and
	ap.int_anio = COALESCE(#{int_anio},ap.int_anio) AND
	app.int_id_periodo_mes =COALESCE(#{int_id_periodo_mes},app.int_id_periodo_mes)
]]>
</sql> 

<sql id="order"> 
<![CDATA[
ORDER BY ${orderColumn} ${orderDirecction}
]]>
</sql> 

<select id="getListQueryByCriteria" resultType="sernanp.app.dao.query.domain.RpResumenPlanillaPagosQuery" parameterType="sernanp.app.dao.query.domain.RpResumenPlanillaPagosQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="sernanp.app.dao.query.domain.RpResumenPlanillaPagosQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="sernanp.app.dao.query.domain.RpResumenPlanillaPagosQuery" parameterType="sernanp.app.dao.query.domain.RpResumenPlanillaPagosQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="sernanp.app.dao.query.domain.RpResumenPlanillaPagosQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="sernanp.app.dao.query.domain.RpResumenPlanillaPagosQueryCriteria"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
