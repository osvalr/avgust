<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="sernanp.app.dao.query.mapper.ReporteResumenAltasBajasQueryMapper"> 

<sql id="outs"> 
<![CDATA[

DISTINCT ON(estado, nombre_completo)
ps.idpersonal,
pn.numerodoc,
pn.apepat,
pn.apemat,
pn.nombre,
(COALESCE(pn.apepat,'')||' '||COALESCE(pn.apemat,'')||' '||COALESCE(pn.nombre,'')) as "nombre_completo",
ps.int_estado,
case when ps.int_estado =0 then 'ACTIVO' else 'INACTIVO' end as estado,
pn.direccion,
pa.nompais,
es.abrtablatipo as sexo,
to_char(pn.fechanacimiento,'DD/MM/YYYY')as fechanacimiento,
pn.ruc,
p.telefono,
ps.mailpersonal,

-- Regimen contractual
rc.var_descripcion_regimen_contractual,
--TIPO TRABAJADOR

pc.idarea,
ao.desarea, -- MATCHING?
to_char(pc.dte_fec_inicio,'DD/MM/YYYY')as dte_fec_inicio,
to_char(coalesce(ad.dte_fec_cese,coalesce(ad.dte_fec_termino,coalesce(pc.dte_fec_cese,pc.dte_fec_termino))),'DD/MM/YYYY') as dte_fec_termino,
go.var_desc_grupo_ocupacional,
c.var_nom_cargo,
rgp.var_descripcion_regimen_pensionario,
af.var_nombre_afp,
--tipo de comision
ps.var_codigo_afiliacion,
ps.dte_fecha_afiliacion,
ps.var_numero_cuenta_bancaria,
pmf.c_meta,
pmf.c_fte_fto,
(COALESCE(ca.descategoriaanp,'')|| ' ' || COALESCE(an.desareanatural,'')) as "ubicacion",
--napp.dec_total_ingresos,
pc.num_sueldo as dec_total_ingresos,
ne.var_cod_nivel_estudio,
ne.var_descripcion_nivel_estudio,
tp.int_cod_tipo_profesion,
tp.var_descripcion_tipo_profesion,
pr.int_cod_profesion,
pr.var_descripcion_profesion,
pnf.var_descripcion_institucion,
to_char(pnf.dte_fecha_ingreso, 'DD/MM/YYYY') as dte_fecha_ingreso,
to_char(pnf.dte_fecha_culminacion, 'DD/MM/YYYY') as dte_fecha_culminacion,
pnf.int_sigue_estudios,

coalesce((
        select 
		sum(nc.dec_monto_calculado)

	from 
	
	        personal.t_nomina_concepto nc
                left join personal.t_nomina_anio_periodo_personal napp on nc.srl_id_nomina_anio_periodo_personal = napp.srl_id_nomina_anio_periodo_personal
	        left join personal.t_concepto_planilla cp on nc.srl_id_concepto_planilla = cp.srl_id_concepto_planilla
                inner join sernanp.personal tps ON tps.idpersonal = ps.idpersonal
	        inner join personal.t_anio_periodo_planilla tapp ON napp.srl_id_anio_periodo_planilla = tapp.srl_id_anio_periodo_planilla
	        inner join personal.t_anio_planilla tap ON tapp.srl_id_anio_planilla = tap.srl_id_anio_planilla
	      
	      
	where
		cp.var_descrip_corto_concepto = 'QUINTA CATEGORIA' and
		tps.idpersonal = ps.idpersonal and
		napp.srl_id_contrato = pc.srl_id_contrato and
		tap.int_anio = COALESCE(#{int_anio},tap.int_anio) 
	
),0) as 	quinta_categoria,

coalesce((
        select 
		sum(nc.dec_monto_calculado)

	from 
	
	        personal.t_nomina_concepto nc
                left join personal.t_nomina_anio_periodo_personal napp on nc.srl_id_nomina_anio_periodo_personal = napp.srl_id_nomina_anio_periodo_personal
	        left join personal.t_concepto_planilla cp on nc.srl_id_concepto_planilla = cp.srl_id_concepto_planilla
                inner join sernanp.personal tps ON tps.idpersonal = ps.idpersonal
	        inner join personal.t_anio_periodo_planilla tapp ON napp.srl_id_anio_periodo_planilla = tapp.srl_id_anio_periodo_planilla
	        inner join personal.t_anio_planilla tap ON tapp.srl_id_anio_planilla = tap.srl_id_anio_planilla
	      
	      
	where
		cp.var_descrip_corto_concepto = 'CUARTA CATEGORIA' and
		tps.idpersonal = ps.idpersonal and
		napp.srl_id_contrato = pc.srl_id_contrato and
		tap.int_anio = COALESCE(#{int_anio},tap.int_anio)
	
),0) as cuarta_categoria,

coalesce((
        select 
		sum(nc.dec_monto_calculado)

	from 
	
	        personal.t_nomina_concepto nc
                left join personal.t_nomina_anio_periodo_personal napp on nc.srl_id_nomina_anio_periodo_personal = napp.srl_id_nomina_anio_periodo_personal
	        left join personal.t_concepto_planilla cp on nc.srl_id_concepto_planilla = cp.srl_id_concepto_planilla
                inner join sernanp.personal tps ON tps.idpersonal = ps.idpersonal
	        inner join personal.t_anio_periodo_planilla tapp ON napp.srl_id_anio_periodo_planilla = tapp.srl_id_anio_periodo_planilla
	        inner join personal.t_anio_planilla tap ON tapp.srl_id_anio_planilla = tap.srl_id_anio_planilla
	      
	      
	where
		cp.var_descrip_corto_concepto = 'APORTE OBLIGATORIO' and
		tps.idpersonal = ps.idpersonal and
		napp.srl_id_contrato = pc.srl_id_contrato and
		tap.int_anio = COALESCE(#{int_anio},tap.int_anio)
	
),0) as essalud


]]>
</sql> 

<sql id="from"> 
<![CDATA[


sernanp.persona p 
inner join sernanp.personanatural pn on p.idpersona = pn.idpersona 
inner join sernanp.personal ps on ps.idpersonanatural = pn.idpersonanatural
left join sernanp.t_personal_contrato pc on ps.idpersonal = pc.idpersonal
LEFT JOIN sernanp.t_regimen_contractual rc ON rc.srl_id_regimen_contractual = pc.srl_id_regimen_contractual
left join sernanp.t_personal_contrato ad on pc.srl_id_contrato = ad.srl_id_contrato_padre
left join personal.t_afp af ON ps.srl_id_afp = af.srl_id_afp
left join sernanp.pais pa on p.idpais = pa.idpais
left join sernanp.sede s on pc.srl_id_sede_pres = s.idsede
left join sernanp.areanatural an on s.idareanatural = an.idareanatural
left join sernanp.categoriaanp ca on an.idcategoriaanp = ca.idcategoriaanp
left join sernanp.areaorganica ao on pc.idarea = ao.idarea

left join sernanp.vw_estado_generico eg on eg.codinttablatipo = ps.int_estado
left join sernanp.vw_genero_sexual es on pn.idsexo = es.idtablatipo
left join sernanp.t_personanatural_formacion pnf on pn.idpersonanatural = pnf.idpersonanatural
left join sernanp.t_cargo c on pc.srl_id_cargo = c.srl_id_cargo
left join sernanp.t_grupo_ocupacional go on pnf.srl_id_grupo_ocupacional = go.srl_id_grupo_ocupacional
left join sernanp.t_regimen_pensionario rgp on ps.srl_id_regimen_pensionario = rgp.srl_id_regimen_pensionario
left join sernanp.t_nivel_estudio ne on pnf.srl_id_nivel_estudio = ne.srl_id_nivel_estudio
left join sernanp.t_profesion pr on pnf.srl_id_profesion = pr.srl_id_profesion
left join sernanp.t_tipo_profesion tp on pr.srl_id_tipo_profesion = tp.srl_id_tipo_profesion
left join personal.t_personal_meta_fte_fto pmf on ps.idpersonal = pmf.idpersonal

]]>
</sql> 

<sql id="inputs"> 
<![CDATA[


COALESCE(ps.int_estado,0) = COALESCE(#{int_estado},COALESCE(ps.int_estado,0))
AND pc.dte_fec_inicio = (SELECT MAX(dte_fec_inicio) FROM sernanp.t_personal_contrato WHERE idpersonal = ps.idpersonal)


]]>
</sql> 

<sql id="order"> 
<![CDATA[

ORDER BY 
estado, nombre_completo

]]>
</sql> 

<select id="getListQueryByCriteria" resultType="sernanp.app.dao.query.domain.ReporteResumenAltasBajasQuery" parameterType="sernanp.app.dao.query.domain.ReporteResumenAltasBajasQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="sernanp.app.dao.query.domain.ReporteResumenAltasBajasQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="sernanp.app.dao.query.domain.ReporteResumenAltasBajasQuery" parameterType="sernanp.app.dao.query.domain.ReporteResumenAltasBajasQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="sernanp.app.dao.query.domain.ReporteResumenAltasBajasQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="sernanp.app.dao.query.domain.ReporteResumenAltasBajasQueryCriteria"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
