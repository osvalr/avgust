<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="sernanp.app.dao.query.mapper.RpSeleccionPostulantesFichaPostulacionQueryMapper"> 

<sql id="outs"> 
<![CDATA[
 
	p.idpersona,
	pn.idpersonanatural, 
	pp.int_id_postulante,
	(COALESCE(pn.apepat,'')|| ' ' || COALESCE(pn.apemat,'')|| ' ' || COALESCE(pn.nombre,'')) as nombre_completo,
	pn.idtipodocumento,
	vwtd.abrtablatipo AS tipodocumento,
	pn.numerodoc,
	c.srl_id_convocatoria,
	c.var_num_convocatoria,
	c.int_id_estado as estado_convocatoria,
	cao.srl_id_conv_area_org,
	cao.var_codigo_postulacion,
		
	caofe.int_id_estado_asistencia,	
	
	ep.var_nombre_estado AS des_estado_postulante_cnv_area_org
	,fe.int_id_tipo_factor
	,vtfe.destablatipo as evaluacion
	
--	,caofe.dec_puntaje_obtenido
	,caofe.dec_puntaje_calculado as dec_puntaje_obtenido
	,pcao.dec_puntaje_total
	,caofe.int_id_estado_clasificacion
	--,vepcao.var_nombre_estado as des_estado_postulante_cnv_area_org
	,vtec.destablatipo as estado_clasificacion
	--ADD TO FILTER FOR UNIDAD OPERATIVA
	
	,sars.srl_id_sede_req_sel 
	,sars.var_nomb_sede
	
	--END

]]>
</sql> 

<sql id="from"> 
<![CDATA[

sernanp.persona p 
INNER join sernanp.personanatural pn on p.idpersona = pn.idpersona
INNER JOIN sernanp.t_postulante_personal pp ON pn.idpersonanatural = pp.int_id_postulante
INNER JOIN sernanp.t_postulante_cnv_area_org pcao ON pp.int_id_postulante = pcao.int_id_postulante
LEFT JOIN sernanp.t_convocatoria_area_org cao ON pcao.srl_id_conv_area_org = cao.srl_id_conv_area_org

--ADD TO FILTER FOR UNIDAD OPERATIVA

LEFT JOIN personal.t_requerimiento_personal rp ON rp.srl_id_requerimiento_personal = cao.srl_id_requerimiento_personal
LEFT JOIN sernanp.t_sede_administrativa_req_sel sars ON sars.srl_id_sede_req_sel = rp.srl_id_sede_req_sel

--END

LEFT JOIN sernanp.t_convocatoria c ON cao.srl_id_convocatoria = c.srl_id_convocatoria

LEFT JOIN sernanp.vw_tipo_documento vwtd ON pn.idtipodocumento = vwtd.ordtablatipo

LEFT JOIN sernanp.vw_estado_postulacion ep on ep.var_cod_estado = pcao.int_id_estado

LEFT JOIN personal.t_conv_area_org_factor_eval caofe on caofe.srl_id_postulante_conv_area_org = pcao.srl_id_postulante_conv_area_org AND srl_id_factor_evaluacion NOT IN(2,3)

LEFT JOIN sernanp.vw_tipo_estado_clasificacion vtec on vtec.ordtablatipo = caofe.int_id_estado_clasificacion

LEFT JOIN personal.t_factor_evaluacion fe ON fe.srl_id_factor_evaluacion = caofe.srl_id_factor_evaluacion
LEFT JOIN sernanp.vw_tipo_factor_evaluacion vtfe ON vtfe.codinttablatipo = fe.int_id_tipo_factor 

]]>
</sql> 

<sql id="inputs"> 
<![CDATA[


UPPER(COALESCE(COALESCE(pn.nombre,'') || ' ' || COALESCE(pn.apepat,'') || ' ' || COALESCE(pn.apemat,''),'')) like UPPER(COALESCE('%'|| #{nombre_completo} ||'%',COALESCE(COALESCE(pn.nombre,'') || ' ' || COALESCE(pn.apepat,'') || ' ' || COALESCE(pn.apemat,''),''))) AND
coalesce(pn.numerodoc,'') ilike coalesce('%'|| #{numerodoc} || '%', coalesce(pn.numerodoc,'')) AND
coalesce(c.srl_id_convocatoria,0) = coalesce(#{srl_id_convocatoria}, coalesce(c.srl_id_convocatoria,0)) AND
coalesce(cao.srl_id_conv_area_org,0) = coalesce (#{srl_id_conv_area_org}, coalesce(cao.srl_id_conv_area_org,0)) 
AND coalesce(fe.int_id_tipo_factor,0) = coalesce(#{int_id_tipo_factor}, coalesce(fe.int_id_tipo_factor,0)) AND
--ADD TO FILTER FOR UNIDAD OPERATIVA

COALESCE(sars.srl_id_sede_req_sel,0) = COALESCE(#{srl_id_sede_req_sel},COALESCE(sars.srl_id_sede_req_sel,0)) 

--END
--AND caofe.dec_puntaje_obtenido >= 0

]]>
</sql> 

<sql id="order"> 
<![CDATA[

ORDER BY  var_num_convocatoria desc, var_codigo_postulacion, ep.var_cod_estado, dec_puntaje_total desc, nombre_completo, int_id_tipo_factor, int_id_estado_clasificacion --evaluacion

]]>
</sql> 

<select id="getListQueryByCriteria" resultType="sernanp.app.dao.query.domain.RpSeleccionPostulantesFichaPostulacionQuery" parameterType="sernanp.app.dao.query.domain.RpSeleccionPostulantesFichaPostulacionQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="sernanp.app.dao.query.domain.RpSeleccionPostulantesFichaPostulacionQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="sernanp.app.dao.query.domain.RpSeleccionPostulantesFichaPostulacionQuery" parameterType="sernanp.app.dao.query.domain.RpSeleccionPostulantesFichaPostulacionQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="sernanp.app.dao.query.domain.RpSeleccionPostulantesFichaPostulacionQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="sernanp.app.dao.query.domain.RpSeleccionPostulantesFichaPostulacionQueryCriteria"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
