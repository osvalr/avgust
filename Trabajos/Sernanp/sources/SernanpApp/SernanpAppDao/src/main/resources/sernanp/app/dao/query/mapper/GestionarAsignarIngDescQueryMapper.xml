<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="sernanp.app.dao.query.mapper.GestionarAsignarIngDescQueryMapper"> 

<sql id="outs"> 
<![CDATA[


p.idpersona,
pn.idpersonanatural,
ps.idpersonal,
(COALESCE(pn.apepat,'')||' '||COALESCE(pn.apemat,'')||' '||COALESCE(pn.nombre,''))as"nombre_completo",
pn.nombre,
pn.apepat,
pn.apemat,
pn.idtipodocumento,
td.abrtablatipo as "descrip_documento",
pn.numerodoc,
pn.ruc,
pc.srl_id_regimen_contractual,
rc.var_descripcion_regimen_contractual,
c.srl_id_cargo,
c.var_nom_cargo,
to_char(pc.dte_fec_inicio,'DD/MM/YYYY')as inicio_contrato,
to_char(coalesce(ad.dte_fec_cese,coalesce(ad.dte_fec_termino,coalesce(pc.dte_fec_cese,pc.dte_fec_termino))),'DD/MM/YYYY') as termino_contrato,
ps.int_estado,
CASE WHEN ps.int_estado=0 THEN 'ACTIVO'
WHEN ps.int_estado=1 THEN 'INACTIVO'
END as "desc_estado"


]]>
</sql> 

<sql id="from"> 
<![CDATA[


sernanp.persona p inner join sernanp.personanatural pn on p.idpersona=pn.idpersona
inner join sernanp.personal ps on ps.idpersonanatural=pn.idpersonanatural
left join sernanp.t_personal_contrato pc on ps.idpersonal=pc.idpersonal
left join sernanp.t_personal_contrato ad on pc.srl_id_contrato = ad.srl_id_contrato_padre
left join sernanp.t_regimen_contractual rc on pc.srl_id_regimen_contractual=rc.srl_id_regimen_contractual
left join sernanp.vw_tipo_documento td on pn.idtipodocumento=td.idtablatipo
left join sernanp.t_cargo c on pc.srl_id_cargo=c.srl_id_cargo


]]>
</sql> 

<sql id="inputs"> 
<![CDATA[


p.idpersona = coalesce(#{idpersona},p.idpersona) and
pn.idpersonanatural = coalesce(#{idpersonanatural},pn.idpersonanatural) and
ps.idpersonal = coalesce(#{idpersonal},ps.idpersonal) and
UPPER(COALESCE(COALESCE(pn.nombre,'')||' '||COALESCE(pn.apepat,'')||' '||COALESCE(pn.apemat,''),'')) like UPPER(COALESCE('%'|| #{nombres_completos} ||'%',COALESCE(COALESCE(pn.nombre,'')||' '||COALESCE(pn.apepat,'')||' '|| COALESCE(pn.apemat,''),''))) and
COALESCE(pn.idtipodocumento,0)=COALESCE(#{idtipodocumento},COALESCE(pn.idtipodocumento,0)) and
COALESCE(pn.numerodoc,'')like COALESCE('%'||#{numerodoc}||'%',COALESCE(pn.numerodoc,'')) and
COALESCE(pn.ruc,'')like COALESCE('%'||#{ruc}||'%',COALESCE(pn.ruc,'')) and
COALESCE(ps.int_estado,0)=COALESCE(#{int_estado},COALESCE(ps.int_estado,0)) and
COALESCE(pc.srl_id_regimen_contractual,0)=COALESCE(#{srl_id_regimen_contractual},COALESCE(pc.srl_id_regimen_contractual,0))and
COALESCE(c.srl_id_cargo,0)=COALESCE(#{srl_id_cargo},COALESCE(c.srl_id_cargo,0))and
pc.dte_fec_inicio=(select MAX(dte_fec_inicio) from sernanp.t_personal_contrato where idpersonal=pc.idpersonal) and
coalesce(to_char(ad.dte_fec_inicio,'DD/MM/YYYY'),'') = coalesce(to_char((select MAX(dte_fec_inicio) from sernanp.t_personal_contrato where srl_id_contrato_padre = pc.srl_id_contrato),'DD/MM/YYYY'),coalesce(to_char(ad.dte_fec_inicio,'DD/MM/YYYY'),''))


]]>
</sql> 

<sql id="order"> 
<![CDATA[
ORDER BY ${orderColumn} ${orderDirecction}
]]>
</sql> 

<select id="getListQueryByCriteria" resultType="sernanp.app.dao.query.domain.GestionarAsignarIngDescQuery" parameterType="sernanp.app.dao.query.domain.GestionarAsignarIngDescQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="sernanp.app.dao.query.domain.GestionarAsignarIngDescQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="sernanp.app.dao.query.domain.GestionarAsignarIngDescQuery" parameterType="sernanp.app.dao.query.domain.GestionarAsignarIngDescQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="sernanp.app.dao.query.domain.GestionarAsignarIngDescQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="sernanp.app.dao.query.domain.GestionarAsignarIngDescQueryCriteria"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
