<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="sernanp.app.dao.query.mapper.RpNominaDescuentoConceptoQueryMapper"> 

<sql id="outs"> 
<![CDATA[

	napp.idpersonal,
	(COALESCE(pn.apepat,'')||' '||COALESCE(pn.apemat,'')||' '||COALESCE(pn.nombre,'')) as "nombre_completo",
	pn.numerodoc,
	napp.c_meta,
	napp.c_fte_fto,
	ff.var_descripcion_fuente_financiamiento,
	napp.srl_id_regimen_contractual,
	ap.int_anio,
	ms.destablatipo as descrip_periodo,
	ps.srl_id_regimen_pensionario,
	var_descripcion_regimen_pensionario,
	cp.var_descrip_corto_concepto,
	nc.dec_monto_calculado
	

]]>
</sql> 

<sql id="from"> 
<![CDATA[


personal.t_nomina_anio_periodo_personal napp
inner join personal.t_anio_periodo_planilla app on napp.srl_id_anio_periodo_planilla = app.srl_id_anio_periodo_planilla
inner join personal.t_anio_planilla ap on app.srl_id_anio_planilla = ap.srl_id_anio_planilla
inner join sernanp.vw_meses ms on ms.codinttablatipo = app.int_id_periodo_mes
inner join sernanp.t_regimen_contractual rc on napp.srl_id_regimen_contractual=rc.srl_id_regimen_contractual
inner join sernanp.personal ps on napp.idpersonal = ps.idpersonal
inner join sernanp.personanatural pn on ps.idpersonanatural=pn.idpersonanatural
left join sernanp.t_personal_contrato pc on napp.srl_id_contrato=pc.srl_id_contrato
left join sernanp.t_regimen_pensionario rp on ps.srl_id_regimen_pensionario = rp.srl_id_regimen_pensionario
left join mpp.t_fuente_financiamiento ff on napp.c_fte_fto = ff.var_rubro_fte_fto
left join personal.t_nomina_concepto nc ON napp.srl_id_nomina_anio_periodo_personal = nc.srl_id_nomina_anio_periodo_personal
left join personal.t_concepto_planilla cp ON (cp.srl_id_concepto_planilla = nc.srl_id_concepto_planilla)


]]>
</sql>

<sql id="inputs"> 
<![CDATA[

COALESCE(napp.srl_id_regimen_contractual,0)=COALESCE(#{srl_id_regimen_contractual},COALESCE(napp.srl_id_regimen_contractual,0)) and
ap.int_anio = COALESCE(#{int_anio},ap.int_anio) and
app.int_id_periodo_mes = COALESCE(#{int_id_periodo_mes},app.int_id_periodo_mes) and
COALESCE(cp.srl_id_concepto_planilla,0)=COALESCE(#{srl_id_concepto_planilla},COALESCE(cp.srl_id_concepto_planilla,0)) and
cp.int_id_tipo_concepto = COALESCE(2, cp.int_id_tipo_concepto) and
--(ps.srl_id_regimen_pensionario <> 5) and
napp.int_id_estado = COALESCE(1,napp.int_id_estado)

]]>
</sql> 

<sql id="order"> 
<![CDATA[


group by
	napp.idpersonal,
	nombre_completo,
	pn.numerodoc,
	rc.var_descripcion_regimen_contractual,
	ap.int_anio,
	ms.destablatipo,
	ps.srl_id_regimen_pensionario,
	app.int_id_periodo_mes,
	napp.srl_id_regimen_contractual,
	napp.c_meta,
	napp.c_fte_fto,
	ff.var_descripcion_fuente_financiamiento,
	napp.srl_id_nomina_anio_periodo_personal,
	rp.srl_id_regimen_pensionario,
	cp.var_descrip_corto_concepto,
	nc.dec_monto_calculado
	
order by
	
	cp.var_descrip_corto_concepto,
	srl_id_regimen_contractual,
	c_fte_fto,
	nombre_completo

]]>
</sql> 

<select id="getListQueryByCriteria" resultType="sernanp.app.dao.query.domain.RpNominaDescuentoConceptoQuery" parameterType="sernanp.app.dao.query.domain.RpNominaDescuentoConceptoQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryByMap" resultType="sernanp.app.dao.query.domain.RpNominaDescuentoConceptoQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByCriteria" resultType="sernanp.app.dao.query.domain.RpNominaDescuentoConceptoQuery" parameterType="sernanp.app.dao.query.domain.RpNominaDescuentoConceptoQueryCriteria"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getListQueryPaginationByMap" resultType="sernanp.app.dao.query.domain.RpNominaDescuentoConceptoQuery" parameterType="java.util.Map"> 
select 
<include refid="outs" /> 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
<include refid="order" /> 
</select> 

<select id="getCountRowsByCriteria" resultType="java.lang.Integer" parameterType="sernanp.app.dao.query.domain.RpNominaDescuentoConceptoQueryCriteria"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

<select id="getCountRowsByMap" resultType="java.lang.Integer" parameterType="java.util.Map"> 
select 
count(*) 
from 
<include refid="from" /> 
where 
<include refid="inputs" /> 
</select> 

</mapper> 
